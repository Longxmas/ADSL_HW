   yacc.py:3317:Created by PLY version 3.11 (http://www.dabeaz.com/ply)
   yacc.py:3377:
   yacc.py:3378:Grammar
   yacc.py:3379:
   yacc.py:3381:Rule 0     S' -> CompUnit
   yacc.py:3381:Rule 1     CompUnit -> Decl CompUnit
   yacc.py:3381:Rule 2     CompUnit -> FuncDef CompUnit
   yacc.py:3381:Rule 3     CompUnit -> MainFuncDef
   yacc.py:3381:Rule 4     Decl -> ConstDecl
   yacc.py:3381:Rule 5     Decl -> VarDecl
   yacc.py:3381:Rule 6     ConstDecl -> CONST BType ConstDefList SEMICOLON
   yacc.py:3381:Rule 7     ConstDefList -> ConstDef
   yacc.py:3381:Rule 8     ConstDefList -> ConstDef COMMA ConstDefList
   yacc.py:3381:Rule 9     ConstDef -> IDENTIFIER ASSIGN ConstInitVal
   yacc.py:3381:Rule 10    ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:3381:Rule 11    ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:3381:Rule 12    ConstInitVal -> ConstExp
   yacc.py:3381:Rule 13    ConstInitVal -> LBRACE ConstInitValList RBRACE
   yacc.py:3381:Rule 14    ConstInitValList -> ConstInitVal
   yacc.py:3381:Rule 15    ConstInitValList -> ConstInitVal COMMA ConstInitValList
   yacc.py:3381:Rule 16    ConstExp -> AddExp
   yacc.py:3381:Rule 17    BType -> INT
   yacc.py:3381:Rule 18    VarDecl -> BType VarDef SEMICOLON
   yacc.py:3381:Rule 19    VarDecl -> BType VarDef COMMA VarDef SEMICOLON
   yacc.py:3381:Rule 20    VarDef -> IDENTIFIER
   yacc.py:3381:Rule 21    VarDef -> IDENTIFIER ASSIGN InitVal
   yacc.py:3381:Rule 22    VarDef -> IDENTIFIER LBRACKET ConstExp RBRACKET
   yacc.py:3381:Rule 23    VarDef -> IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN InitVal
   yacc.py:3381:Rule 24    InitVal -> Exp
   yacc.py:3381:Rule 25    InitVal -> LBRACE InitVal RBRACE
   yacc.py:3381:Rule 26    Exp -> AddExp
   yacc.py:3381:Rule 27    LOrExp -> LAndExp
   yacc.py:3381:Rule 28    LOrExp -> LOrExp LOGICALOR LAndExp
   yacc.py:3381:Rule 29    LAndExp -> EqExp
   yacc.py:3381:Rule 30    LAndExp -> LAndExp LOGICALAND EqExp
   yacc.py:3381:Rule 31    AddExp -> MulExp
   yacc.py:3381:Rule 32    AddExp -> AddExp PLUS MulExp
   yacc.py:3381:Rule 33    AddExp -> AddExp MINUS MulExp
   yacc.py:3381:Rule 34    MulExp -> UnaryExp
   yacc.py:3381:Rule 35    MulExp -> MulExp TIMES UnaryExp
   yacc.py:3381:Rule 36    MulExp -> MulExp DIVIDE UnaryExp
   yacc.py:3381:Rule 37    MulExp -> MulExp MOD UnaryExp
   yacc.py:3381:Rule 38    EqExp -> RelExp
   yacc.py:3381:Rule 39    EqExp -> EqExp EQUAL RelExp
   yacc.py:3381:Rule 40    EqExp -> EqExp NOTEQUAL RelExp
   yacc.py:3381:Rule 41    RelExp -> AddExp
   yacc.py:3381:Rule 42    RelExp -> RelExp LESS AddExp
   yacc.py:3381:Rule 43    RelExp -> RelExp LESSEQUAL AddExp
   yacc.py:3381:Rule 44    RelExp -> RelExp GREATER AddExp
   yacc.py:3381:Rule 45    RelExp -> RelExp GREATEREQUAL AddExp
   yacc.py:3381:Rule 46    UnaryExp -> PrimaryExp
   yacc.py:3381:Rule 47    UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:3381:Rule 48    UnaryExp -> UnaryOp UnaryExp
   yacc.py:3381:Rule 49    UnaryOp -> PLUS
   yacc.py:3381:Rule 50    UnaryOp -> MINUS
   yacc.py:3381:Rule 51    UnaryOp -> NOT
   yacc.py:3381:Rule 52    PrimaryExp -> LPAREN Exp RPAREN
   yacc.py:3381:Rule 53    PrimaryExp -> LVal
   yacc.py:3381:Rule 54    PrimaryExp -> INTCONST
   yacc.py:3381:Rule 55    LVal -> IDENTIFIER
   yacc.py:3381:Rule 56    LVal -> IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:3381:Rule 57    MainFuncDef -> INT MAIN LPAREN RPAREN Block
   yacc.py:3381:Rule 58    Stmt -> LVal ASSIGN Exp SEMICOLON
   yacc.py:3381:Rule 59    Stmt -> Exp SEMICOLON
   yacc.py:3381:Rule 60    Stmt -> SEMICOLON
   yacc.py:3381:Rule 61    Stmt -> Block
   yacc.py:3381:Rule 62    Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt
   yacc.py:3381:Rule 63    Stmt -> IF LPAREN Cond RPAREN Stmt
   yacc.py:3381:Rule 64    Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt
   yacc.py:3381:Rule 65    Stmt -> BREAK SEMICOLON
   yacc.py:3381:Rule 66    Stmt -> CONTINUE SEMICOLON
   yacc.py:3381:Rule 67    Stmt -> RETURN Exp SEMICOLON
   yacc.py:3381:Rule 68    Stmt -> RETURN SEMICOLON
   yacc.py:3381:Rule 69    Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON
   yacc.py:3381:Rule 70    Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON
   yacc.py:3381:Rule 71    Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block
   yacc.py:3381:Rule 72    PRINTFParams -> Exp
   yacc.py:3381:Rule 73    PRINTFParams -> Exp COMMA PRINTFParams
   yacc.py:3381:Rule 74    PRINTFParams -> <empty>
   yacc.py:3381:Rule 75    ForStmt -> LVal ASSIGN Exp
   yacc.py:3381:Rule 76    ForStmt -> <empty>
   yacc.py:3381:Rule 77    list -> Exp
   yacc.py:3381:Rule 78    list -> list COMMA Exp
   yacc.py:3381:Rule 79    FuncDef -> DEF IDENTIFIER LPAREN FuncFParams RPAREN Block
   yacc.py:3381:Rule 80    FuncDef -> DEF IDENTIFIER LPAREN RPAREN Block
   yacc.py:3381:Rule 81    FuncFParams -> FuncFParam
   yacc.py:3381:Rule 82    FuncFParams -> FuncFParam COMMA FuncFParams
   yacc.py:3381:Rule 83    FuncFParam -> IDENTIFIER
   yacc.py:3381:Rule 84    FuncRParams -> Exp
   yacc.py:3381:Rule 85    FuncRParams -> Exp COMMA FuncRParams
   yacc.py:3381:Rule 86    Block -> LBRACE RBRACE
   yacc.py:3381:Rule 87    Block -> LBRACE BlockItems RBRACE
   yacc.py:3381:Rule 88    BlockItems -> BlockItem
   yacc.py:3381:Rule 89    BlockItems -> BlockItem BlockItems
   yacc.py:3381:Rule 90    BlockItem -> Decl
   yacc.py:3381:Rule 91    BlockItem -> Stmt
   yacc.py:3381:Rule 92    Cond -> LOrExp
   yacc.py:3381:Rule 93    FormatString -> FORMATSTRING
   yacc.py:3399:
   yacc.py:3400:Terminals, with rules where they appear
   yacc.py:3401:
   yacc.py:3405:ASSIGN               : 9 10 11 21 23 58 69 75
   yacc.py:3405:BREAK                : 65
   yacc.py:3405:COMMA                : 8 15 19 73 78 82 85
   yacc.py:3405:CONST                : 6
   yacc.py:3405:CONTINUE             : 66
   yacc.py:3405:DEF                  : 79 80
   yacc.py:3405:DIVIDE               : 36
   yacc.py:3405:ELSE                 : 62
   yacc.py:3405:EQUAL                : 39
   yacc.py:3405:FOR                  : 64
   yacc.py:3405:FORMATSTRING         : 93
   yacc.py:3405:GETINT               : 69
   yacc.py:3405:GREATER              : 44
   yacc.py:3405:GREATEREQUAL         : 45
   yacc.py:3405:IDENTIFIER           : 9 10 11 20 21 22 23 47 55 56 71 79 80 83
   yacc.py:3405:IF                   : 62 63
   yacc.py:3405:IN                   : 71
   yacc.py:3405:INT                  : 17 57
   yacc.py:3405:INTCONST             : 54
   yacc.py:3405:LBRACE               : 13 25 86 87
   yacc.py:3405:LBRACKET             : 10 11 11 22 23 56 71
   yacc.py:3405:LESS                 : 42
   yacc.py:3405:LESSEQUAL            : 43
   yacc.py:3405:LOGICALAND           : 30
   yacc.py:3405:LOGICALOR            : 28
   yacc.py:3405:LPAREN               : 47 52 57 62 63 64 69 70 71 79 80
   yacc.py:3405:MAIN                 : 57
   yacc.py:3405:MINUS                : 33 50
   yacc.py:3405:MOD                  : 37
   yacc.py:3405:NOT                  : 51
   yacc.py:3405:NOTEQUAL             : 40
   yacc.py:3405:PARALLEL             : 71
   yacc.py:3405:PLUS                 : 32 49
   yacc.py:3405:PRINTF               : 70
   yacc.py:3405:RBRACE               : 13 25 86 87
   yacc.py:3405:RBRACKET             : 10 11 11 22 23 56 71
   yacc.py:3405:RETURN               : 67 68
   yacc.py:3405:RPAREN               : 47 52 57 62 63 64 69 70 71 79 80
   yacc.py:3405:SEMICOLON            : 6 18 19 58 59 60 64 64 65 66 67 68 69 70
   yacc.py:3405:TIMES                : 35
   yacc.py:3405:error                : 
   yacc.py:3407:
   yacc.py:3408:Nonterminals, with rules where they appear
   yacc.py:3409:
   yacc.py:3413:AddExp               : 16 26 32 33 41 42 43 44 45
   yacc.py:3413:BType                : 6 18 19
   yacc.py:3413:Block                : 57 61 71 79 80
   yacc.py:3413:BlockItem            : 88 89
   yacc.py:3413:BlockItems           : 87 89
   yacc.py:3413:CompUnit             : 1 2 0
   yacc.py:3413:Cond                 : 62 63 64
   yacc.py:3413:ConstDecl            : 4
   yacc.py:3413:ConstDef             : 7 8
   yacc.py:3413:ConstDefList         : 6 8
   yacc.py:3413:ConstExp             : 10 11 11 12 22 23
   yacc.py:3413:ConstInitVal         : 9 10 11 14 15
   yacc.py:3413:ConstInitValList     : 13 15
   yacc.py:3413:Decl                 : 1 90
   yacc.py:3413:EqExp                : 29 30 39 40
   yacc.py:3413:Exp                  : 24 52 56 58 59 67 72 73 75 77 78 84 85
   yacc.py:3413:ForStmt              : 64 64
   yacc.py:3413:FormatString         : 70
   yacc.py:3413:FuncDef              : 2
   yacc.py:3413:FuncFParam           : 81 82
   yacc.py:3413:FuncFParams          : 79 82
   yacc.py:3413:FuncRParams          : 47 85
   yacc.py:3413:InitVal              : 21 23 25
   yacc.py:3413:LAndExp              : 27 28 30
   yacc.py:3413:LOrExp               : 28 92
   yacc.py:3413:LVal                 : 53 58 69 75
   yacc.py:3413:MainFuncDef          : 3
   yacc.py:3413:MulExp               : 31 32 33 35 36 37
   yacc.py:3413:PRINTFParams         : 70 73
   yacc.py:3413:PrimaryExp           : 46
   yacc.py:3413:RelExp               : 38 39 40 42 43 44 45
   yacc.py:3413:Stmt                 : 62 62 63 64 91
   yacc.py:3413:UnaryExp             : 34 35 36 37 48
   yacc.py:3413:UnaryOp              : 48
   yacc.py:3413:VarDecl              : 5
   yacc.py:3413:VarDef               : 18 19 19
   yacc.py:3413:list                 : 71 78
   yacc.py:3414:
   yacc.py:2543:Parsing method: LALR
   yacc.py:2561:
   yacc.py:2562:state 0
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> . CompUnit
   yacc.py:2565:    (1) CompUnit -> . Decl CompUnit
   yacc.py:2565:    (2) CompUnit -> . FuncDef CompUnit
   yacc.py:2565:    (3) CompUnit -> . MainFuncDef
   yacc.py:2565:    (4) Decl -> . ConstDecl
   yacc.py:2565:    (5) Decl -> . VarDecl
   yacc.py:2565:    (79) FuncDef -> . DEF IDENTIFIER LPAREN FuncFParams RPAREN Block
   yacc.py:2565:    (80) FuncDef -> . DEF IDENTIFIER LPAREN RPAREN Block
   yacc.py:2565:    (57) MainFuncDef -> . INT MAIN LPAREN RPAREN Block
   yacc.py:2565:    (6) ConstDecl -> . CONST BType ConstDefList SEMICOLON
   yacc.py:2565:    (18) VarDecl -> . BType VarDef SEMICOLON
   yacc.py:2565:    (19) VarDecl -> . BType VarDef COMMA VarDef SEMICOLON
   yacc.py:2565:    (17) BType -> . INT
   yacc.py:2566:
   yacc.py:2687:    DEF             shift and go to state 7
   yacc.py:2687:    INT             shift and go to state 8
   yacc.py:2687:    CONST           shift and go to state 9
   yacc.py:2689:
   yacc.py:2714:    CompUnit                       shift and go to state 1
   yacc.py:2714:    Decl                           shift and go to state 2
   yacc.py:2714:    FuncDef                        shift and go to state 3
   yacc.py:2714:    MainFuncDef                    shift and go to state 4
   yacc.py:2714:    ConstDecl                      shift and go to state 5
   yacc.py:2714:    VarDecl                        shift and go to state 6
   yacc.py:2714:    BType                          shift and go to state 10
   yacc.py:2561:
   yacc.py:2562:state 1
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> CompUnit .
   yacc.py:2566:
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 2
   yacc.py:2563:
   yacc.py:2565:    (1) CompUnit -> Decl . CompUnit
   yacc.py:2565:    (1) CompUnit -> . Decl CompUnit
   yacc.py:2565:    (2) CompUnit -> . FuncDef CompUnit
   yacc.py:2565:    (3) CompUnit -> . MainFuncDef
   yacc.py:2565:    (4) Decl -> . ConstDecl
   yacc.py:2565:    (5) Decl -> . VarDecl
   yacc.py:2565:    (79) FuncDef -> . DEF IDENTIFIER LPAREN FuncFParams RPAREN Block
   yacc.py:2565:    (80) FuncDef -> . DEF IDENTIFIER LPAREN RPAREN Block
   yacc.py:2565:    (57) MainFuncDef -> . INT MAIN LPAREN RPAREN Block
   yacc.py:2565:    (6) ConstDecl -> . CONST BType ConstDefList SEMICOLON
   yacc.py:2565:    (18) VarDecl -> . BType VarDef SEMICOLON
   yacc.py:2565:    (19) VarDecl -> . BType VarDef COMMA VarDef SEMICOLON
   yacc.py:2565:    (17) BType -> . INT
   yacc.py:2566:
   yacc.py:2687:    DEF             shift and go to state 7
   yacc.py:2687:    INT             shift and go to state 8
   yacc.py:2687:    CONST           shift and go to state 9
   yacc.py:2689:
   yacc.py:2714:    Decl                           shift and go to state 2
   yacc.py:2714:    CompUnit                       shift and go to state 11
   yacc.py:2714:    FuncDef                        shift and go to state 3
   yacc.py:2714:    MainFuncDef                    shift and go to state 4
   yacc.py:2714:    ConstDecl                      shift and go to state 5
   yacc.py:2714:    VarDecl                        shift and go to state 6
   yacc.py:2714:    BType                          shift and go to state 10
   yacc.py:2561:
   yacc.py:2562:state 3
   yacc.py:2563:
   yacc.py:2565:    (2) CompUnit -> FuncDef . CompUnit
   yacc.py:2565:    (1) CompUnit -> . Decl CompUnit
   yacc.py:2565:    (2) CompUnit -> . FuncDef CompUnit
   yacc.py:2565:    (3) CompUnit -> . MainFuncDef
   yacc.py:2565:    (4) Decl -> . ConstDecl
   yacc.py:2565:    (5) Decl -> . VarDecl
   yacc.py:2565:    (79) FuncDef -> . DEF IDENTIFIER LPAREN FuncFParams RPAREN Block
   yacc.py:2565:    (80) FuncDef -> . DEF IDENTIFIER LPAREN RPAREN Block
   yacc.py:2565:    (57) MainFuncDef -> . INT MAIN LPAREN RPAREN Block
   yacc.py:2565:    (6) ConstDecl -> . CONST BType ConstDefList SEMICOLON
   yacc.py:2565:    (18) VarDecl -> . BType VarDef SEMICOLON
   yacc.py:2565:    (19) VarDecl -> . BType VarDef COMMA VarDef SEMICOLON
   yacc.py:2565:    (17) BType -> . INT
   yacc.py:2566:
   yacc.py:2687:    DEF             shift and go to state 7
   yacc.py:2687:    INT             shift and go to state 8
   yacc.py:2687:    CONST           shift and go to state 9
   yacc.py:2689:
   yacc.py:2714:    FuncDef                        shift and go to state 3
   yacc.py:2714:    CompUnit                       shift and go to state 12
   yacc.py:2714:    Decl                           shift and go to state 2
   yacc.py:2714:    MainFuncDef                    shift and go to state 4
   yacc.py:2714:    ConstDecl                      shift and go to state 5
   yacc.py:2714:    VarDecl                        shift and go to state 6
   yacc.py:2714:    BType                          shift and go to state 10
   yacc.py:2561:
   yacc.py:2562:state 4
   yacc.py:2563:
   yacc.py:2565:    (3) CompUnit -> MainFuncDef .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 3 (CompUnit -> MainFuncDef .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 5
   yacc.py:2563:
   yacc.py:2565:    (4) Decl -> ConstDecl .
   yacc.py:2566:
   yacc.py:2687:    DEF             reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    INT             reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    CONST           reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    SEMICOLON       reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    IF              reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    FOR             reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    BREAK           reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    CONTINUE        reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    RETURN          reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    PRINTF          reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    PARALLEL        reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    LBRACE          reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    LPAREN          reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    INTCONST        reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    PLUS            reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    MINUS           reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    NOT             reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2687:    RBRACE          reduce using rule 4 (Decl -> ConstDecl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 6
   yacc.py:2563:
   yacc.py:2565:    (5) Decl -> VarDecl .
   yacc.py:2566:
   yacc.py:2687:    DEF             reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    INT             reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    CONST           reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    SEMICOLON       reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    IF              reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    FOR             reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    BREAK           reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    CONTINUE        reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    RETURN          reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    PRINTF          reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    PARALLEL        reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    LBRACE          reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    LPAREN          reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    INTCONST        reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    PLUS            reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    MINUS           reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    NOT             reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2687:    RBRACE          reduce using rule 5 (Decl -> VarDecl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 7
   yacc.py:2563:
   yacc.py:2565:    (79) FuncDef -> DEF . IDENTIFIER LPAREN FuncFParams RPAREN Block
   yacc.py:2565:    (80) FuncDef -> DEF . IDENTIFIER LPAREN RPAREN Block
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 13
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 8
   yacc.py:2563:
   yacc.py:2565:    (57) MainFuncDef -> INT . MAIN LPAREN RPAREN Block
   yacc.py:2565:    (17) BType -> INT .
   yacc.py:2566:
   yacc.py:2687:    MAIN            shift and go to state 14
   yacc.py:2687:    IDENTIFIER      reduce using rule 17 (BType -> INT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 9
   yacc.py:2563:
   yacc.py:2565:    (6) ConstDecl -> CONST . BType ConstDefList SEMICOLON
   yacc.py:2565:    (17) BType -> . INT
   yacc.py:2566:
   yacc.py:2687:    INT             shift and go to state 16
   yacc.py:2689:
   yacc.py:2714:    BType                          shift and go to state 15
   yacc.py:2561:
   yacc.py:2562:state 10
   yacc.py:2563:
   yacc.py:2565:    (18) VarDecl -> BType . VarDef SEMICOLON
   yacc.py:2565:    (19) VarDecl -> BType . VarDef COMMA VarDef SEMICOLON
   yacc.py:2565:    (20) VarDef -> . IDENTIFIER
   yacc.py:2565:    (21) VarDef -> . IDENTIFIER ASSIGN InitVal
   yacc.py:2565:    (22) VarDef -> . IDENTIFIER LBRACKET ConstExp RBRACKET
   yacc.py:2565:    (23) VarDef -> . IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN InitVal
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 18
   yacc.py:2689:
   yacc.py:2714:    VarDef                         shift and go to state 17
   yacc.py:2561:
   yacc.py:2562:state 11
   yacc.py:2563:
   yacc.py:2565:    (1) CompUnit -> Decl CompUnit .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 1 (CompUnit -> Decl CompUnit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 12
   yacc.py:2563:
   yacc.py:2565:    (2) CompUnit -> FuncDef CompUnit .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 2 (CompUnit -> FuncDef CompUnit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 13
   yacc.py:2563:
   yacc.py:2565:    (79) FuncDef -> DEF IDENTIFIER . LPAREN FuncFParams RPAREN Block
   yacc.py:2565:    (80) FuncDef -> DEF IDENTIFIER . LPAREN RPAREN Block
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 19
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 14
   yacc.py:2563:
   yacc.py:2565:    (57) MainFuncDef -> INT MAIN . LPAREN RPAREN Block
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 20
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 15
   yacc.py:2563:
   yacc.py:2565:    (6) ConstDecl -> CONST BType . ConstDefList SEMICOLON
   yacc.py:2565:    (7) ConstDefList -> . ConstDef
   yacc.py:2565:    (8) ConstDefList -> . ConstDef COMMA ConstDefList
   yacc.py:2565:    (9) ConstDef -> . IDENTIFIER ASSIGN ConstInitVal
   yacc.py:2565:    (10) ConstDef -> . IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2565:    (11) ConstDef -> . IDENTIFIER LBRACKET ConstExp RBRACKET LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 23
   yacc.py:2689:
   yacc.py:2714:    ConstDefList                   shift and go to state 21
   yacc.py:2714:    ConstDef                       shift and go to state 22
   yacc.py:2561:
   yacc.py:2562:state 16
   yacc.py:2563:
   yacc.py:2565:    (17) BType -> INT .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 17 (BType -> INT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 17
   yacc.py:2563:
   yacc.py:2565:    (18) VarDecl -> BType VarDef . SEMICOLON
   yacc.py:2565:    (19) VarDecl -> BType VarDef . COMMA VarDef SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 24
   yacc.py:2687:    COMMA           shift and go to state 25
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 18
   yacc.py:2563:
   yacc.py:2565:    (20) VarDef -> IDENTIFIER .
   yacc.py:2565:    (21) VarDef -> IDENTIFIER . ASSIGN InitVal
   yacc.py:2565:    (22) VarDef -> IDENTIFIER . LBRACKET ConstExp RBRACKET
   yacc.py:2565:    (23) VarDef -> IDENTIFIER . LBRACKET ConstExp RBRACKET ASSIGN InitVal
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 20 (VarDef -> IDENTIFIER .)
   yacc.py:2687:    COMMA           reduce using rule 20 (VarDef -> IDENTIFIER .)
   yacc.py:2687:    ASSIGN          shift and go to state 26
   yacc.py:2687:    LBRACKET        shift and go to state 27
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 19
   yacc.py:2563:
   yacc.py:2565:    (79) FuncDef -> DEF IDENTIFIER LPAREN . FuncFParams RPAREN Block
   yacc.py:2565:    (80) FuncDef -> DEF IDENTIFIER LPAREN . RPAREN Block
   yacc.py:2565:    (81) FuncFParams -> . FuncFParam
   yacc.py:2565:    (82) FuncFParams -> . FuncFParam COMMA FuncFParams
   yacc.py:2565:    (83) FuncFParam -> . IDENTIFIER
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 30
   yacc.py:2687:    IDENTIFIER      shift and go to state 28
   yacc.py:2689:
   yacc.py:2714:    FuncFParams                    shift and go to state 29
   yacc.py:2714:    FuncFParam                     shift and go to state 31
   yacc.py:2561:
   yacc.py:2562:state 20
   yacc.py:2563:
   yacc.py:2565:    (57) MainFuncDef -> INT MAIN LPAREN . RPAREN Block
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 32
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 21
   yacc.py:2563:
   yacc.py:2565:    (6) ConstDecl -> CONST BType ConstDefList . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 33
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 22
   yacc.py:2563:
   yacc.py:2565:    (7) ConstDefList -> ConstDef .
   yacc.py:2565:    (8) ConstDefList -> ConstDef . COMMA ConstDefList
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 7 (ConstDefList -> ConstDef .)
   yacc.py:2687:    COMMA           shift and go to state 34
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 23
   yacc.py:2563:
   yacc.py:2565:    (9) ConstDef -> IDENTIFIER . ASSIGN ConstInitVal
   yacc.py:2565:    (10) ConstDef -> IDENTIFIER . LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2565:    (11) ConstDef -> IDENTIFIER . LBRACKET ConstExp RBRACKET LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2566:
   yacc.py:2687:    ASSIGN          shift and go to state 35
   yacc.py:2687:    LBRACKET        shift and go to state 36
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 24
   yacc.py:2563:
   yacc.py:2565:    (18) VarDecl -> BType VarDef SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    DEF             reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    SEMICOLON       reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 18 (VarDecl -> BType VarDef SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 25
   yacc.py:2563:
   yacc.py:2565:    (19) VarDecl -> BType VarDef COMMA . VarDef SEMICOLON
   yacc.py:2565:    (20) VarDef -> . IDENTIFIER
   yacc.py:2565:    (21) VarDef -> . IDENTIFIER ASSIGN InitVal
   yacc.py:2565:    (22) VarDef -> . IDENTIFIER LBRACKET ConstExp RBRACKET
   yacc.py:2565:    (23) VarDef -> . IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN InitVal
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 18
   yacc.py:2689:
   yacc.py:2714:    VarDef                         shift and go to state 37
   yacc.py:2561:
   yacc.py:2562:state 26
   yacc.py:2563:
   yacc.py:2565:    (21) VarDef -> IDENTIFIER ASSIGN . InitVal
   yacc.py:2565:    (24) InitVal -> . Exp
   yacc.py:2565:    (25) InitVal -> . LBRACE InitVal RBRACE
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 41
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    InitVal                        shift and go to state 39
   yacc.py:2714:    Exp                            shift and go to state 40
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 27
   yacc.py:2563:
   yacc.py:2565:    (22) VarDef -> IDENTIFIER LBRACKET . ConstExp RBRACKET
   yacc.py:2565:    (23) VarDef -> IDENTIFIER LBRACKET . ConstExp RBRACKET ASSIGN InitVal
   yacc.py:2565:    (16) ConstExp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    ConstExp                       shift and go to state 53
   yacc.py:2714:    AddExp                         shift and go to state 54
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 28
   yacc.py:2563:
   yacc.py:2565:    (83) FuncFParam -> IDENTIFIER .
   yacc.py:2566:
   yacc.py:2687:    COMMA           reduce using rule 83 (FuncFParam -> IDENTIFIER .)
   yacc.py:2687:    RPAREN          reduce using rule 83 (FuncFParam -> IDENTIFIER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 29
   yacc.py:2563:
   yacc.py:2565:    (79) FuncDef -> DEF IDENTIFIER LPAREN FuncFParams . RPAREN Block
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 55
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 30
   yacc.py:2563:
   yacc.py:2565:    (80) FuncDef -> DEF IDENTIFIER LPAREN RPAREN . Block
   yacc.py:2565:    (86) Block -> . LBRACE RBRACE
   yacc.py:2565:    (87) Block -> . LBRACE BlockItems RBRACE
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 57
   yacc.py:2689:
   yacc.py:2714:    Block                          shift and go to state 56
   yacc.py:2561:
   yacc.py:2562:state 31
   yacc.py:2563:
   yacc.py:2565:    (81) FuncFParams -> FuncFParam .
   yacc.py:2565:    (82) FuncFParams -> FuncFParam . COMMA FuncFParams
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 81 (FuncFParams -> FuncFParam .)
   yacc.py:2687:    COMMA           shift and go to state 58
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 32
   yacc.py:2563:
   yacc.py:2565:    (57) MainFuncDef -> INT MAIN LPAREN RPAREN . Block
   yacc.py:2565:    (86) Block -> . LBRACE RBRACE
   yacc.py:2565:    (87) Block -> . LBRACE BlockItems RBRACE
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 57
   yacc.py:2689:
   yacc.py:2714:    Block                          shift and go to state 59
   yacc.py:2561:
   yacc.py:2562:state 33
   yacc.py:2563:
   yacc.py:2565:    (6) ConstDecl -> CONST BType ConstDefList SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    DEF             reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    SEMICOLON       reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 6 (ConstDecl -> CONST BType ConstDefList SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 34
   yacc.py:2563:
   yacc.py:2565:    (8) ConstDefList -> ConstDef COMMA . ConstDefList
   yacc.py:2565:    (7) ConstDefList -> . ConstDef
   yacc.py:2565:    (8) ConstDefList -> . ConstDef COMMA ConstDefList
   yacc.py:2565:    (9) ConstDef -> . IDENTIFIER ASSIGN ConstInitVal
   yacc.py:2565:    (10) ConstDef -> . IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2565:    (11) ConstDef -> . IDENTIFIER LBRACKET ConstExp RBRACKET LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 23
   yacc.py:2689:
   yacc.py:2714:    ConstDef                       shift and go to state 22
   yacc.py:2714:    ConstDefList                   shift and go to state 60
   yacc.py:2561:
   yacc.py:2562:state 35
   yacc.py:2563:
   yacc.py:2565:    (9) ConstDef -> IDENTIFIER ASSIGN . ConstInitVal
   yacc.py:2565:    (12) ConstInitVal -> . ConstExp
   yacc.py:2565:    (13) ConstInitVal -> . LBRACE ConstInitValList RBRACE
   yacc.py:2565:    (16) ConstExp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 63
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    ConstInitVal                   shift and go to state 61
   yacc.py:2714:    ConstExp                       shift and go to state 62
   yacc.py:2714:    AddExp                         shift and go to state 54
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 36
   yacc.py:2563:
   yacc.py:2565:    (10) ConstDef -> IDENTIFIER LBRACKET . ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2565:    (11) ConstDef -> IDENTIFIER LBRACKET . ConstExp RBRACKET LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2565:    (16) ConstExp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    ConstExp                       shift and go to state 64
   yacc.py:2714:    AddExp                         shift and go to state 54
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 37
   yacc.py:2563:
   yacc.py:2565:    (19) VarDecl -> BType VarDef COMMA VarDef . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 65
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 38
   yacc.py:2563:
   yacc.py:2565:    (47) UnaryExp -> IDENTIFIER . LPAREN FuncRParams RPAREN
   yacc.py:2565:    (55) LVal -> IDENTIFIER .
   yacc.py:2565:    (56) LVal -> IDENTIFIER . LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 66
   yacc.py:2687:    TIMES           reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    DIVIDE          reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    MOD             reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    PLUS            reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    MINUS           reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    SEMICOLON       reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    COMMA           reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    RBRACKET        reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    RBRACE          reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    RPAREN          reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    LESS            reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    GREATER         reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    EQUAL           reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    LOGICALAND      reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    LOGICALOR       reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    LBRACKET        shift and go to state 67
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 39
   yacc.py:2563:
   yacc.py:2565:    (21) VarDef -> IDENTIFIER ASSIGN InitVal .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 21 (VarDef -> IDENTIFIER ASSIGN InitVal .)
   yacc.py:2687:    COMMA           reduce using rule 21 (VarDef -> IDENTIFIER ASSIGN InitVal .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 40
   yacc.py:2563:
   yacc.py:2565:    (24) InitVal -> Exp .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 24 (InitVal -> Exp .)
   yacc.py:2687:    COMMA           reduce using rule 24 (InitVal -> Exp .)
   yacc.py:2687:    RBRACE          reduce using rule 24 (InitVal -> Exp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 41
   yacc.py:2563:
   yacc.py:2565:    (25) InitVal -> LBRACE . InitVal RBRACE
   yacc.py:2565:    (24) InitVal -> . Exp
   yacc.py:2565:    (25) InitVal -> . LBRACE InitVal RBRACE
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 41
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    InitVal                        shift and go to state 68
   yacc.py:2714:    Exp                            shift and go to state 40
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 42
   yacc.py:2563:
   yacc.py:2565:    (26) Exp -> AddExp .
   yacc.py:2565:    (32) AddExp -> AddExp . PLUS MulExp
   yacc.py:2565:    (33) AddExp -> AddExp . MINUS MulExp
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 26 (Exp -> AddExp .)
   yacc.py:2687:    COMMA           reduce using rule 26 (Exp -> AddExp .)
   yacc.py:2687:    RBRACE          reduce using rule 26 (Exp -> AddExp .)
   yacc.py:2687:    RPAREN          reduce using rule 26 (Exp -> AddExp .)
   yacc.py:2687:    RBRACKET        reduce using rule 26 (Exp -> AddExp .)
   yacc.py:2687:    PLUS            shift and go to state 69
   yacc.py:2687:    MINUS           shift and go to state 70
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 43
   yacc.py:2563:
   yacc.py:2565:    (31) AddExp -> MulExp .
   yacc.py:2565:    (35) MulExp -> MulExp . TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> MulExp . DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> MulExp . MOD UnaryExp
   yacc.py:2566:
   yacc.py:2687:    PLUS            reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    MINUS           reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    COMMA           reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    RBRACKET        reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    RBRACE          reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    RPAREN          reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    LESS            reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    GREATER         reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    EQUAL           reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 31 (AddExp -> MulExp .)
   yacc.py:2687:    TIMES           shift and go to state 71
   yacc.py:2687:    DIVIDE          shift and go to state 72
   yacc.py:2687:    MOD             shift and go to state 73
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 44
   yacc.py:2563:
   yacc.py:2565:    (49) UnaryOp -> PLUS .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 49 (UnaryOp -> PLUS .)
   yacc.py:2687:    LPAREN          reduce using rule 49 (UnaryOp -> PLUS .)
   yacc.py:2687:    INTCONST        reduce using rule 49 (UnaryOp -> PLUS .)
   yacc.py:2687:    PLUS            reduce using rule 49 (UnaryOp -> PLUS .)
   yacc.py:2687:    MINUS           reduce using rule 49 (UnaryOp -> PLUS .)
   yacc.py:2687:    NOT             reduce using rule 49 (UnaryOp -> PLUS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 45
   yacc.py:2563:
   yacc.py:2565:    (50) UnaryOp -> MINUS .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 50 (UnaryOp -> MINUS .)
   yacc.py:2687:    LPAREN          reduce using rule 50 (UnaryOp -> MINUS .)
   yacc.py:2687:    INTCONST        reduce using rule 50 (UnaryOp -> MINUS .)
   yacc.py:2687:    PLUS            reduce using rule 50 (UnaryOp -> MINUS .)
   yacc.py:2687:    MINUS           reduce using rule 50 (UnaryOp -> MINUS .)
   yacc.py:2687:    NOT             reduce using rule 50 (UnaryOp -> MINUS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 46
   yacc.py:2563:
   yacc.py:2565:    (34) MulExp -> UnaryExp .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    DIVIDE          reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    MOD             reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    PLUS            reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    MINUS           reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    COMMA           reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    RBRACKET        reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    RBRACE          reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    RPAREN          reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    LESS            reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    GREATER         reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    EQUAL           reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 34 (MulExp -> UnaryExp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 47
   yacc.py:2563:
   yacc.py:2565:    (46) UnaryExp -> PrimaryExp .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    DIVIDE          reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    MOD             reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    PLUS            reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    MINUS           reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    COMMA           reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    RBRACKET        reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    RBRACE          reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    RPAREN          reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    LESS            reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    GREATER         reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    EQUAL           reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 46 (UnaryExp -> PrimaryExp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 48
   yacc.py:2563:
   yacc.py:2565:    (52) PrimaryExp -> LPAREN . Exp RPAREN
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Exp                            shift and go to state 74
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 49
   yacc.py:2563:
   yacc.py:2565:    (48) UnaryExp -> UnaryOp . UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    UnaryExp                       shift and go to state 75
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 50
   yacc.py:2563:
   yacc.py:2565:    (53) PrimaryExp -> LVal .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    DIVIDE          reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    MOD             reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    PLUS            reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    MINUS           reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    SEMICOLON       reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    COMMA           reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    RBRACKET        reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    RBRACE          reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    RPAREN          reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    LESS            reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    GREATER         reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    EQUAL           reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    LOGICALAND      reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    LOGICALOR       reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 51
   yacc.py:2563:
   yacc.py:2565:    (54) PrimaryExp -> INTCONST .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    DIVIDE          reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    MOD             reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    PLUS            reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    MINUS           reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    SEMICOLON       reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    COMMA           reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    RBRACKET        reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    RBRACE          reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    RPAREN          reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    LESS            reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    GREATER         reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    EQUAL           reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    LOGICALAND      reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2687:    LOGICALOR       reduce using rule 54 (PrimaryExp -> INTCONST .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 52
   yacc.py:2563:
   yacc.py:2565:    (51) UnaryOp -> NOT .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 51 (UnaryOp -> NOT .)
   yacc.py:2687:    LPAREN          reduce using rule 51 (UnaryOp -> NOT .)
   yacc.py:2687:    INTCONST        reduce using rule 51 (UnaryOp -> NOT .)
   yacc.py:2687:    PLUS            reduce using rule 51 (UnaryOp -> NOT .)
   yacc.py:2687:    MINUS           reduce using rule 51 (UnaryOp -> NOT .)
   yacc.py:2687:    NOT             reduce using rule 51 (UnaryOp -> NOT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 53
   yacc.py:2563:
   yacc.py:2565:    (22) VarDef -> IDENTIFIER LBRACKET ConstExp . RBRACKET
   yacc.py:2565:    (23) VarDef -> IDENTIFIER LBRACKET ConstExp . RBRACKET ASSIGN InitVal
   yacc.py:2566:
   yacc.py:2687:    RBRACKET        shift and go to state 76
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 54
   yacc.py:2563:
   yacc.py:2565:    (16) ConstExp -> AddExp .
   yacc.py:2565:    (32) AddExp -> AddExp . PLUS MulExp
   yacc.py:2565:    (33) AddExp -> AddExp . MINUS MulExp
   yacc.py:2566:
   yacc.py:2687:    RBRACKET        reduce using rule 16 (ConstExp -> AddExp .)
   yacc.py:2687:    COMMA           reduce using rule 16 (ConstExp -> AddExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 16 (ConstExp -> AddExp .)
   yacc.py:2687:    RBRACE          reduce using rule 16 (ConstExp -> AddExp .)
   yacc.py:2687:    PLUS            shift and go to state 69
   yacc.py:2687:    MINUS           shift and go to state 70
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 55
   yacc.py:2563:
   yacc.py:2565:    (79) FuncDef -> DEF IDENTIFIER LPAREN FuncFParams RPAREN . Block
   yacc.py:2565:    (86) Block -> . LBRACE RBRACE
   yacc.py:2565:    (87) Block -> . LBRACE BlockItems RBRACE
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 57
   yacc.py:2689:
   yacc.py:2714:    Block                          shift and go to state 77
   yacc.py:2561:
   yacc.py:2562:state 56
   yacc.py:2563:
   yacc.py:2565:    (80) FuncDef -> DEF IDENTIFIER LPAREN RPAREN Block .
   yacc.py:2566:
   yacc.py:2687:    DEF             reduce using rule 80 (FuncDef -> DEF IDENTIFIER LPAREN RPAREN Block .)
   yacc.py:2687:    INT             reduce using rule 80 (FuncDef -> DEF IDENTIFIER LPAREN RPAREN Block .)
   yacc.py:2687:    CONST           reduce using rule 80 (FuncDef -> DEF IDENTIFIER LPAREN RPAREN Block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 57
   yacc.py:2563:
   yacc.py:2565:    (86) Block -> LBRACE . RBRACE
   yacc.py:2565:    (87) Block -> LBRACE . BlockItems RBRACE
   yacc.py:2565:    (88) BlockItems -> . BlockItem
   yacc.py:2565:    (89) BlockItems -> . BlockItem BlockItems
   yacc.py:2565:    (90) BlockItem -> . Decl
   yacc.py:2565:    (91) BlockItem -> . Stmt
   yacc.py:2565:    (4) Decl -> . ConstDecl
   yacc.py:2565:    (5) Decl -> . VarDecl
   yacc.py:2565:    (58) Stmt -> . LVal ASSIGN Exp SEMICOLON
   yacc.py:2565:    (59) Stmt -> . Exp SEMICOLON
   yacc.py:2565:    (60) Stmt -> . SEMICOLON
   yacc.py:2565:    (61) Stmt -> . Block
   yacc.py:2565:    (62) Stmt -> . IF LPAREN Cond RPAREN Stmt ELSE Stmt
   yacc.py:2565:    (63) Stmt -> . IF LPAREN Cond RPAREN Stmt
   yacc.py:2565:    (64) Stmt -> . FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt
   yacc.py:2565:    (65) Stmt -> . BREAK SEMICOLON
   yacc.py:2565:    (66) Stmt -> . CONTINUE SEMICOLON
   yacc.py:2565:    (67) Stmt -> . RETURN Exp SEMICOLON
   yacc.py:2565:    (68) Stmt -> . RETURN SEMICOLON
   yacc.py:2565:    (69) Stmt -> . LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON
   yacc.py:2565:    (70) Stmt -> . PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON
   yacc.py:2565:    (71) Stmt -> . PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block
   yacc.py:2565:    (6) ConstDecl -> . CONST BType ConstDefList SEMICOLON
   yacc.py:2565:    (18) VarDecl -> . BType VarDef SEMICOLON
   yacc.py:2565:    (19) VarDecl -> . BType VarDef COMMA VarDef SEMICOLON
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (86) Block -> . LBRACE RBRACE
   yacc.py:2565:    (87) Block -> . LBRACE BlockItems RBRACE
   yacc.py:2565:    (17) BType -> . INT
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2566:
   yacc.py:2687:    RBRACE          shift and go to state 78
   yacc.py:2687:    SEMICOLON       shift and go to state 85
   yacc.py:2687:    IF              shift and go to state 87
   yacc.py:2687:    FOR             shift and go to state 88
   yacc.py:2687:    BREAK           shift and go to state 89
   yacc.py:2687:    CONTINUE        shift and go to state 90
   yacc.py:2687:    RETURN          shift and go to state 91
   yacc.py:2687:    PRINTF          shift and go to state 92
   yacc.py:2687:    PARALLEL        shift and go to state 93
   yacc.py:2687:    CONST           shift and go to state 9
   yacc.py:2687:    IDENTIFIER      shift and go to state 94
   yacc.py:2687:    LBRACE          shift and go to state 57
   yacc.py:2687:    INT             shift and go to state 16
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    BlockItems                     shift and go to state 79
   yacc.py:2714:    BlockItem                      shift and go to state 80
   yacc.py:2714:    Decl                           shift and go to state 81
   yacc.py:2714:    Stmt                           shift and go to state 82
   yacc.py:2714:    ConstDecl                      shift and go to state 5
   yacc.py:2714:    VarDecl                        shift and go to state 6
   yacc.py:2714:    LVal                           shift and go to state 83
   yacc.py:2714:    Exp                            shift and go to state 84
   yacc.py:2714:    Block                          shift and go to state 86
   yacc.py:2714:    BType                          shift and go to state 10
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2561:
   yacc.py:2562:state 58
   yacc.py:2563:
   yacc.py:2565:    (82) FuncFParams -> FuncFParam COMMA . FuncFParams
   yacc.py:2565:    (81) FuncFParams -> . FuncFParam
   yacc.py:2565:    (82) FuncFParams -> . FuncFParam COMMA FuncFParams
   yacc.py:2565:    (83) FuncFParam -> . IDENTIFIER
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 28
   yacc.py:2689:
   yacc.py:2714:    FuncFParam                     shift and go to state 31
   yacc.py:2714:    FuncFParams                    shift and go to state 95
   yacc.py:2561:
   yacc.py:2562:state 59
   yacc.py:2563:
   yacc.py:2565:    (57) MainFuncDef -> INT MAIN LPAREN RPAREN Block .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 57 (MainFuncDef -> INT MAIN LPAREN RPAREN Block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 60
   yacc.py:2563:
   yacc.py:2565:    (8) ConstDefList -> ConstDef COMMA ConstDefList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 8 (ConstDefList -> ConstDef COMMA ConstDefList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 61
   yacc.py:2563:
   yacc.py:2565:    (9) ConstDef -> IDENTIFIER ASSIGN ConstInitVal .
   yacc.py:2566:
   yacc.py:2687:    COMMA           reduce using rule 9 (ConstDef -> IDENTIFIER ASSIGN ConstInitVal .)
   yacc.py:2687:    SEMICOLON       reduce using rule 9 (ConstDef -> IDENTIFIER ASSIGN ConstInitVal .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 62
   yacc.py:2563:
   yacc.py:2565:    (12) ConstInitVal -> ConstExp .
   yacc.py:2566:
   yacc.py:2687:    COMMA           reduce using rule 12 (ConstInitVal -> ConstExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 12 (ConstInitVal -> ConstExp .)
   yacc.py:2687:    RBRACE          reduce using rule 12 (ConstInitVal -> ConstExp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 63
   yacc.py:2563:
   yacc.py:2565:    (13) ConstInitVal -> LBRACE . ConstInitValList RBRACE
   yacc.py:2565:    (14) ConstInitValList -> . ConstInitVal
   yacc.py:2565:    (15) ConstInitValList -> . ConstInitVal COMMA ConstInitValList
   yacc.py:2565:    (12) ConstInitVal -> . ConstExp
   yacc.py:2565:    (13) ConstInitVal -> . LBRACE ConstInitValList RBRACE
   yacc.py:2565:    (16) ConstExp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 63
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    ConstInitValList               shift and go to state 96
   yacc.py:2714:    ConstInitVal                   shift and go to state 97
   yacc.py:2714:    ConstExp                       shift and go to state 62
   yacc.py:2714:    AddExp                         shift and go to state 54
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 64
   yacc.py:2563:
   yacc.py:2565:    (10) ConstDef -> IDENTIFIER LBRACKET ConstExp . RBRACKET ASSIGN ConstInitVal
   yacc.py:2565:    (11) ConstDef -> IDENTIFIER LBRACKET ConstExp . RBRACKET LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2566:
   yacc.py:2687:    RBRACKET        shift and go to state 98
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 65
   yacc.py:2563:
   yacc.py:2565:    (19) VarDecl -> BType VarDef COMMA VarDef SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    DEF             reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    SEMICOLON       reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 19 (VarDecl -> BType VarDef COMMA VarDef SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 66
   yacc.py:2563:
   yacc.py:2565:    (47) UnaryExp -> IDENTIFIER LPAREN . FuncRParams RPAREN
   yacc.py:2565:    (84) FuncRParams -> . Exp
   yacc.py:2565:    (85) FuncRParams -> . Exp COMMA FuncRParams
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    FuncRParams                    shift and go to state 99
   yacc.py:2714:    Exp                            shift and go to state 100
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 67
   yacc.py:2563:
   yacc.py:2565:    (56) LVal -> IDENTIFIER LBRACKET . Exp RBRACKET
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Exp                            shift and go to state 101
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 68
   yacc.py:2563:
   yacc.py:2565:    (25) InitVal -> LBRACE InitVal . RBRACE
   yacc.py:2566:
   yacc.py:2687:    RBRACE          shift and go to state 102
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 69
   yacc.py:2563:
   yacc.py:2565:    (32) AddExp -> AddExp PLUS . MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    MulExp                         shift and go to state 103
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 70
   yacc.py:2563:
   yacc.py:2565:    (33) AddExp -> AddExp MINUS . MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    MulExp                         shift and go to state 104
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 71
   yacc.py:2563:
   yacc.py:2565:    (35) MulExp -> MulExp TIMES . UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    UnaryExp                       shift and go to state 105
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 72
   yacc.py:2563:
   yacc.py:2565:    (36) MulExp -> MulExp DIVIDE . UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    UnaryExp                       shift and go to state 106
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 73
   yacc.py:2563:
   yacc.py:2565:    (37) MulExp -> MulExp MOD . UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    UnaryExp                       shift and go to state 107
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 74
   yacc.py:2563:
   yacc.py:2565:    (52) PrimaryExp -> LPAREN Exp . RPAREN
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 108
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 75
   yacc.py:2563:
   yacc.py:2565:    (48) UnaryExp -> UnaryOp UnaryExp .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    DIVIDE          reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    MOD             reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    PLUS            reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    MINUS           reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    COMMA           reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    RBRACKET        reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    RBRACE          reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    RPAREN          reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    LESS            reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    GREATER         reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    EQUAL           reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 48 (UnaryExp -> UnaryOp UnaryExp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 76
   yacc.py:2563:
   yacc.py:2565:    (22) VarDef -> IDENTIFIER LBRACKET ConstExp RBRACKET .
   yacc.py:2565:    (23) VarDef -> IDENTIFIER LBRACKET ConstExp RBRACKET . ASSIGN InitVal
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 22 (VarDef -> IDENTIFIER LBRACKET ConstExp RBRACKET .)
   yacc.py:2687:    COMMA           reduce using rule 22 (VarDef -> IDENTIFIER LBRACKET ConstExp RBRACKET .)
   yacc.py:2687:    ASSIGN          shift and go to state 109
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 77
   yacc.py:2563:
   yacc.py:2565:    (79) FuncDef -> DEF IDENTIFIER LPAREN FuncFParams RPAREN Block .
   yacc.py:2566:
   yacc.py:2687:    DEF             reduce using rule 79 (FuncDef -> DEF IDENTIFIER LPAREN FuncFParams RPAREN Block .)
   yacc.py:2687:    INT             reduce using rule 79 (FuncDef -> DEF IDENTIFIER LPAREN FuncFParams RPAREN Block .)
   yacc.py:2687:    CONST           reduce using rule 79 (FuncDef -> DEF IDENTIFIER LPAREN FuncFParams RPAREN Block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 78
   yacc.py:2563:
   yacc.py:2565:    (86) Block -> LBRACE RBRACE .
   yacc.py:2566:
   yacc.py:2687:    DEF             reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    INT             reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    CONST           reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    $end            reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    SEMICOLON       reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    IF              reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    FOR             reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    BREAK           reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    CONTINUE        reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    RETURN          reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    PRINTF          reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    PARALLEL        reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    LBRACE          reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    LPAREN          reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    INTCONST        reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    PLUS            reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    MINUS           reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    NOT             reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    RBRACE          reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2687:    ELSE            reduce using rule 86 (Block -> LBRACE RBRACE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 79
   yacc.py:2563:
   yacc.py:2565:    (87) Block -> LBRACE BlockItems . RBRACE
   yacc.py:2566:
   yacc.py:2687:    RBRACE          shift and go to state 110
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 80
   yacc.py:2563:
   yacc.py:2565:    (88) BlockItems -> BlockItem .
   yacc.py:2565:    (89) BlockItems -> BlockItem . BlockItems
   yacc.py:2565:    (88) BlockItems -> . BlockItem
   yacc.py:2565:    (89) BlockItems -> . BlockItem BlockItems
   yacc.py:2565:    (90) BlockItem -> . Decl
   yacc.py:2565:    (91) BlockItem -> . Stmt
   yacc.py:2565:    (4) Decl -> . ConstDecl
   yacc.py:2565:    (5) Decl -> . VarDecl
   yacc.py:2565:    (58) Stmt -> . LVal ASSIGN Exp SEMICOLON
   yacc.py:2565:    (59) Stmt -> . Exp SEMICOLON
   yacc.py:2565:    (60) Stmt -> . SEMICOLON
   yacc.py:2565:    (61) Stmt -> . Block
   yacc.py:2565:    (62) Stmt -> . IF LPAREN Cond RPAREN Stmt ELSE Stmt
   yacc.py:2565:    (63) Stmt -> . IF LPAREN Cond RPAREN Stmt
   yacc.py:2565:    (64) Stmt -> . FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt
   yacc.py:2565:    (65) Stmt -> . BREAK SEMICOLON
   yacc.py:2565:    (66) Stmt -> . CONTINUE SEMICOLON
   yacc.py:2565:    (67) Stmt -> . RETURN Exp SEMICOLON
   yacc.py:2565:    (68) Stmt -> . RETURN SEMICOLON
   yacc.py:2565:    (69) Stmt -> . LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON
   yacc.py:2565:    (70) Stmt -> . PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON
   yacc.py:2565:    (71) Stmt -> . PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block
   yacc.py:2565:    (6) ConstDecl -> . CONST BType ConstDefList SEMICOLON
   yacc.py:2565:    (18) VarDecl -> . BType VarDef SEMICOLON
   yacc.py:2565:    (19) VarDecl -> . BType VarDef COMMA VarDef SEMICOLON
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (86) Block -> . LBRACE RBRACE
   yacc.py:2565:    (87) Block -> . LBRACE BlockItems RBRACE
   yacc.py:2565:    (17) BType -> . INT
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2566:
   yacc.py:2687:    RBRACE          reduce using rule 88 (BlockItems -> BlockItem .)
   yacc.py:2687:    SEMICOLON       shift and go to state 85
   yacc.py:2687:    IF              shift and go to state 87
   yacc.py:2687:    FOR             shift and go to state 88
   yacc.py:2687:    BREAK           shift and go to state 89
   yacc.py:2687:    CONTINUE        shift and go to state 90
   yacc.py:2687:    RETURN          shift and go to state 91
   yacc.py:2687:    PRINTF          shift and go to state 92
   yacc.py:2687:    PARALLEL        shift and go to state 93
   yacc.py:2687:    CONST           shift and go to state 9
   yacc.py:2687:    IDENTIFIER      shift and go to state 94
   yacc.py:2687:    LBRACE          shift and go to state 57
   yacc.py:2687:    INT             shift and go to state 16
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    BlockItem                      shift and go to state 80
   yacc.py:2714:    BlockItems                     shift and go to state 111
   yacc.py:2714:    Decl                           shift and go to state 81
   yacc.py:2714:    Stmt                           shift and go to state 82
   yacc.py:2714:    ConstDecl                      shift and go to state 5
   yacc.py:2714:    VarDecl                        shift and go to state 6
   yacc.py:2714:    LVal                           shift and go to state 83
   yacc.py:2714:    Exp                            shift and go to state 84
   yacc.py:2714:    Block                          shift and go to state 86
   yacc.py:2714:    BType                          shift and go to state 10
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2561:
   yacc.py:2562:state 81
   yacc.py:2563:
   yacc.py:2565:    (90) BlockItem -> Decl .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    IF              reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    FOR             reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    BREAK           reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    CONTINUE        reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    RETURN          reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    PRINTF          reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    PARALLEL        reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    CONST           reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    LBRACE          reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    INT             reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    LPAREN          reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    INTCONST        reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    PLUS            reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    MINUS           reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    NOT             reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2687:    RBRACE          reduce using rule 90 (BlockItem -> Decl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 82
   yacc.py:2563:
   yacc.py:2565:    (91) BlockItem -> Stmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    IF              reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    FOR             reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    BREAK           reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    CONTINUE        reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    RETURN          reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    PRINTF          reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    PARALLEL        reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    CONST           reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    LBRACE          reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    INT             reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    LPAREN          reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    INTCONST        reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    PLUS            reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    MINUS           reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    NOT             reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2687:    RBRACE          reduce using rule 91 (BlockItem -> Stmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 83
   yacc.py:2563:
   yacc.py:2565:    (58) Stmt -> LVal . ASSIGN Exp SEMICOLON
   yacc.py:2565:    (69) Stmt -> LVal . ASSIGN GETINT LPAREN RPAREN SEMICOLON
   yacc.py:2565:    (53) PrimaryExp -> LVal .
   yacc.py:2566:
   yacc.py:2687:    ASSIGN          shift and go to state 112
   yacc.py:2687:    TIMES           reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    DIVIDE          reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    MOD             reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    PLUS            reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    MINUS           reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2687:    SEMICOLON       reduce using rule 53 (PrimaryExp -> LVal .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 84
   yacc.py:2563:
   yacc.py:2565:    (59) Stmt -> Exp . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 113
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 85
   yacc.py:2563:
   yacc.py:2565:    (60) Stmt -> SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2687:    ELSE            reduce using rule 60 (Stmt -> SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 86
   yacc.py:2563:
   yacc.py:2565:    (61) Stmt -> Block .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    IF              reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    FOR             reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    BREAK           reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    CONTINUE        reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    RETURN          reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    PRINTF          reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    PARALLEL        reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    CONST           reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    LBRACE          reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    INT             reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    LPAREN          reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    INTCONST        reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    PLUS            reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    MINUS           reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    NOT             reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    RBRACE          reduce using rule 61 (Stmt -> Block .)
   yacc.py:2687:    ELSE            reduce using rule 61 (Stmt -> Block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 87
   yacc.py:2563:
   yacc.py:2565:    (62) Stmt -> IF . LPAREN Cond RPAREN Stmt ELSE Stmt
   yacc.py:2565:    (63) Stmt -> IF . LPAREN Cond RPAREN Stmt
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 114
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 88
   yacc.py:2563:
   yacc.py:2565:    (64) Stmt -> FOR . LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 115
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 89
   yacc.py:2563:
   yacc.py:2565:    (65) Stmt -> BREAK . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 116
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 90
   yacc.py:2563:
   yacc.py:2565:    (66) Stmt -> CONTINUE . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 117
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 91
   yacc.py:2563:
   yacc.py:2565:    (67) Stmt -> RETURN . Exp SEMICOLON
   yacc.py:2565:    (68) Stmt -> RETURN . SEMICOLON
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 119
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Exp                            shift and go to state 118
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 92
   yacc.py:2563:
   yacc.py:2565:    (70) Stmt -> PRINTF . LPAREN FormatString PRINTFParams RPAREN SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 120
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 93
   yacc.py:2563:
   yacc.py:2565:    (71) Stmt -> PARALLEL . LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 121
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 94
   yacc.py:2563:
   yacc.py:2565:    (55) LVal -> IDENTIFIER .
   yacc.py:2565:    (56) LVal -> IDENTIFIER . LBRACKET Exp RBRACKET
   yacc.py:2565:    (47) UnaryExp -> IDENTIFIER . LPAREN FuncRParams RPAREN
   yacc.py:2566:
   yacc.py:2687:    ASSIGN          reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    TIMES           reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    DIVIDE          reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    MOD             reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    PLUS            reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    MINUS           reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    SEMICOLON       reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    LBRACKET        shift and go to state 67
   yacc.py:2687:    LPAREN          shift and go to state 66
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 95
   yacc.py:2563:
   yacc.py:2565:    (82) FuncFParams -> FuncFParam COMMA FuncFParams .
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 82 (FuncFParams -> FuncFParam COMMA FuncFParams .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 96
   yacc.py:2563:
   yacc.py:2565:    (13) ConstInitVal -> LBRACE ConstInitValList . RBRACE
   yacc.py:2566:
   yacc.py:2687:    RBRACE          shift and go to state 122
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 97
   yacc.py:2563:
   yacc.py:2565:    (14) ConstInitValList -> ConstInitVal .
   yacc.py:2565:    (15) ConstInitValList -> ConstInitVal . COMMA ConstInitValList
   yacc.py:2566:
   yacc.py:2687:    RBRACE          reduce using rule 14 (ConstInitValList -> ConstInitVal .)
   yacc.py:2687:    COMMA           shift and go to state 123
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 98
   yacc.py:2563:
   yacc.py:2565:    (10) ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET . ASSIGN ConstInitVal
   yacc.py:2565:    (11) ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET . LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2566:
   yacc.py:2687:    ASSIGN          shift and go to state 125
   yacc.py:2687:    LBRACKET        shift and go to state 124
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 99
   yacc.py:2563:
   yacc.py:2565:    (47) UnaryExp -> IDENTIFIER LPAREN FuncRParams . RPAREN
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 126
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 100
   yacc.py:2563:
   yacc.py:2565:    (84) FuncRParams -> Exp .
   yacc.py:2565:    (85) FuncRParams -> Exp . COMMA FuncRParams
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 84 (FuncRParams -> Exp .)
   yacc.py:2687:    COMMA           shift and go to state 127
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 101
   yacc.py:2563:
   yacc.py:2565:    (56) LVal -> IDENTIFIER LBRACKET Exp . RBRACKET
   yacc.py:2566:
   yacc.py:2687:    RBRACKET        shift and go to state 128
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 102
   yacc.py:2563:
   yacc.py:2565:    (25) InitVal -> LBRACE InitVal RBRACE .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 25 (InitVal -> LBRACE InitVal RBRACE .)
   yacc.py:2687:    COMMA           reduce using rule 25 (InitVal -> LBRACE InitVal RBRACE .)
   yacc.py:2687:    RBRACE          reduce using rule 25 (InitVal -> LBRACE InitVal RBRACE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 103
   yacc.py:2563:
   yacc.py:2565:    (32) AddExp -> AddExp PLUS MulExp .
   yacc.py:2565:    (35) MulExp -> MulExp . TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> MulExp . DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> MulExp . MOD UnaryExp
   yacc.py:2566:
   yacc.py:2687:    PLUS            reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    MINUS           reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    COMMA           reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    RBRACKET        reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    RBRACE          reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    RPAREN          reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    LESS            reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    GREATER         reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    EQUAL           reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 32 (AddExp -> AddExp PLUS MulExp .)
   yacc.py:2687:    TIMES           shift and go to state 71
   yacc.py:2687:    DIVIDE          shift and go to state 72
   yacc.py:2687:    MOD             shift and go to state 73
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 104
   yacc.py:2563:
   yacc.py:2565:    (33) AddExp -> AddExp MINUS MulExp .
   yacc.py:2565:    (35) MulExp -> MulExp . TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> MulExp . DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> MulExp . MOD UnaryExp
   yacc.py:2566:
   yacc.py:2687:    PLUS            reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    MINUS           reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    COMMA           reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    RBRACKET        reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    RBRACE          reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    RPAREN          reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    LESS            reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    GREATER         reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    EQUAL           reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 33 (AddExp -> AddExp MINUS MulExp .)
   yacc.py:2687:    TIMES           shift and go to state 71
   yacc.py:2687:    DIVIDE          shift and go to state 72
   yacc.py:2687:    MOD             shift and go to state 73
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 105
   yacc.py:2563:
   yacc.py:2565:    (35) MulExp -> MulExp TIMES UnaryExp .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    DIVIDE          reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    MOD             reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    PLUS            reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    MINUS           reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    COMMA           reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    RBRACKET        reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    RBRACE          reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    RPAREN          reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    LESS            reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    GREATER         reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    EQUAL           reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 35 (MulExp -> MulExp TIMES UnaryExp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 106
   yacc.py:2563:
   yacc.py:2565:    (36) MulExp -> MulExp DIVIDE UnaryExp .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    DIVIDE          reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    MOD             reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    PLUS            reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    MINUS           reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    COMMA           reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    RBRACKET        reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    RBRACE          reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    RPAREN          reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    LESS            reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    GREATER         reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    EQUAL           reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 36 (MulExp -> MulExp DIVIDE UnaryExp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 107
   yacc.py:2563:
   yacc.py:2565:    (37) MulExp -> MulExp MOD UnaryExp .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    DIVIDE          reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    MOD             reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    PLUS            reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    MINUS           reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    COMMA           reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    RBRACKET        reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    RBRACE          reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    RPAREN          reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    LESS            reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    GREATER         reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    EQUAL           reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 37 (MulExp -> MulExp MOD UnaryExp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 108
   yacc.py:2563:
   yacc.py:2565:    (52) PrimaryExp -> LPAREN Exp RPAREN .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    DIVIDE          reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    MOD             reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    PLUS            reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    MINUS           reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    SEMICOLON       reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    COMMA           reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    RBRACKET        reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    RBRACE          reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    RPAREN          reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    LESS            reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    GREATER         reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    EQUAL           reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    LOGICALAND      reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2687:    LOGICALOR       reduce using rule 52 (PrimaryExp -> LPAREN Exp RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 109
   yacc.py:2563:
   yacc.py:2565:    (23) VarDef -> IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN . InitVal
   yacc.py:2565:    (24) InitVal -> . Exp
   yacc.py:2565:    (25) InitVal -> . LBRACE InitVal RBRACE
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 41
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    InitVal                        shift and go to state 129
   yacc.py:2714:    Exp                            shift and go to state 40
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 110
   yacc.py:2563:
   yacc.py:2565:    (87) Block -> LBRACE BlockItems RBRACE .
   yacc.py:2566:
   yacc.py:2687:    DEF             reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    INT             reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    CONST           reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    $end            reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    SEMICOLON       reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    IF              reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    FOR             reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    BREAK           reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    CONTINUE        reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    RETURN          reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    PRINTF          reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    PARALLEL        reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    LBRACE          reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    LPAREN          reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    INTCONST        reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    PLUS            reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    MINUS           reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    NOT             reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    RBRACE          reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2687:    ELSE            reduce using rule 87 (Block -> LBRACE BlockItems RBRACE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 111
   yacc.py:2563:
   yacc.py:2565:    (89) BlockItems -> BlockItem BlockItems .
   yacc.py:2566:
   yacc.py:2687:    RBRACE          reduce using rule 89 (BlockItems -> BlockItem BlockItems .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 112
   yacc.py:2563:
   yacc.py:2565:    (58) Stmt -> LVal ASSIGN . Exp SEMICOLON
   yacc.py:2565:    (69) Stmt -> LVal ASSIGN . GETINT LPAREN RPAREN SEMICOLON
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    GETINT          shift and go to state 131
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2714:    Exp                            shift and go to state 130
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2561:
   yacc.py:2562:state 113
   yacc.py:2563:
   yacc.py:2565:    (59) Stmt -> Exp SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2687:    ELSE            reduce using rule 59 (Stmt -> Exp SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 114
   yacc.py:2563:
   yacc.py:2565:    (62) Stmt -> IF LPAREN . Cond RPAREN Stmt ELSE Stmt
   yacc.py:2565:    (63) Stmt -> IF LPAREN . Cond RPAREN Stmt
   yacc.py:2565:    (92) Cond -> . LOrExp
   yacc.py:2565:    (27) LOrExp -> . LAndExp
   yacc.py:2565:    (28) LOrExp -> . LOrExp LOGICALOR LAndExp
   yacc.py:2565:    (29) LAndExp -> . EqExp
   yacc.py:2565:    (30) LAndExp -> . LAndExp LOGICALAND EqExp
   yacc.py:2565:    (38) EqExp -> . RelExp
   yacc.py:2565:    (39) EqExp -> . EqExp EQUAL RelExp
   yacc.py:2565:    (40) EqExp -> . EqExp NOTEQUAL RelExp
   yacc.py:2565:    (41) RelExp -> . AddExp
   yacc.py:2565:    (42) RelExp -> . RelExp LESS AddExp
   yacc.py:2565:    (43) RelExp -> . RelExp LESSEQUAL AddExp
   yacc.py:2565:    (44) RelExp -> . RelExp GREATER AddExp
   yacc.py:2565:    (45) RelExp -> . RelExp GREATEREQUAL AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Cond                           shift and go to state 132
   yacc.py:2714:    LOrExp                         shift and go to state 133
   yacc.py:2714:    LAndExp                        shift and go to state 134
   yacc.py:2714:    EqExp                          shift and go to state 135
   yacc.py:2714:    RelExp                         shift and go to state 136
   yacc.py:2714:    AddExp                         shift and go to state 137
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 115
   yacc.py:2563:
   yacc.py:2565:    (64) Stmt -> FOR LPAREN . ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt
   yacc.py:2565:    (75) ForStmt -> . LVal ASSIGN Exp
   yacc.py:2565:    (76) ForStmt -> .
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 76 (ForStmt -> .)
   yacc.py:2687:    IDENTIFIER      shift and go to state 140
   yacc.py:2689:
   yacc.py:2714:    ForStmt                        shift and go to state 138
   yacc.py:2714:    LVal                           shift and go to state 139
   yacc.py:2561:
   yacc.py:2562:state 116
   yacc.py:2563:
   yacc.py:2565:    (65) Stmt -> BREAK SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2687:    ELSE            reduce using rule 65 (Stmt -> BREAK SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 117
   yacc.py:2563:
   yacc.py:2565:    (66) Stmt -> CONTINUE SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2687:    ELSE            reduce using rule 66 (Stmt -> CONTINUE SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 118
   yacc.py:2563:
   yacc.py:2565:    (67) Stmt -> RETURN Exp . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 141
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 119
   yacc.py:2563:
   yacc.py:2565:    (68) Stmt -> RETURN SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2687:    ELSE            reduce using rule 68 (Stmt -> RETURN SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 120
   yacc.py:2563:
   yacc.py:2565:    (70) Stmt -> PRINTF LPAREN . FormatString PRINTFParams RPAREN SEMICOLON
   yacc.py:2565:    (93) FormatString -> . FORMATSTRING
   yacc.py:2566:
   yacc.py:2687:    FORMATSTRING    shift and go to state 143
   yacc.py:2689:
   yacc.py:2714:    FormatString                   shift and go to state 142
   yacc.py:2561:
   yacc.py:2562:state 121
   yacc.py:2563:
   yacc.py:2565:    (71) Stmt -> PARALLEL LPAREN . IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 144
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 122
   yacc.py:2563:
   yacc.py:2565:    (13) ConstInitVal -> LBRACE ConstInitValList RBRACE .
   yacc.py:2566:
   yacc.py:2687:    COMMA           reduce using rule 13 (ConstInitVal -> LBRACE ConstInitValList RBRACE .)
   yacc.py:2687:    SEMICOLON       reduce using rule 13 (ConstInitVal -> LBRACE ConstInitValList RBRACE .)
   yacc.py:2687:    RBRACE          reduce using rule 13 (ConstInitVal -> LBRACE ConstInitValList RBRACE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 123
   yacc.py:2563:
   yacc.py:2565:    (15) ConstInitValList -> ConstInitVal COMMA . ConstInitValList
   yacc.py:2565:    (14) ConstInitValList -> . ConstInitVal
   yacc.py:2565:    (15) ConstInitValList -> . ConstInitVal COMMA ConstInitValList
   yacc.py:2565:    (12) ConstInitVal -> . ConstExp
   yacc.py:2565:    (13) ConstInitVal -> . LBRACE ConstInitValList RBRACE
   yacc.py:2565:    (16) ConstExp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 63
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    ConstInitVal                   shift and go to state 97
   yacc.py:2714:    ConstInitValList               shift and go to state 145
   yacc.py:2714:    ConstExp                       shift and go to state 62
   yacc.py:2714:    AddExp                         shift and go to state 54
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 124
   yacc.py:2563:
   yacc.py:2565:    (11) ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET LBRACKET . ConstExp RBRACKET ASSIGN ConstInitVal
   yacc.py:2565:    (16) ConstExp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    ConstExp                       shift and go to state 146
   yacc.py:2714:    AddExp                         shift and go to state 54
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 125
   yacc.py:2563:
   yacc.py:2565:    (10) ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN . ConstInitVal
   yacc.py:2565:    (12) ConstInitVal -> . ConstExp
   yacc.py:2565:    (13) ConstInitVal -> . LBRACE ConstInitValList RBRACE
   yacc.py:2565:    (16) ConstExp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 63
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    ConstExp                       shift and go to state 62
   yacc.py:2714:    ConstInitVal                   shift and go to state 147
   yacc.py:2714:    AddExp                         shift and go to state 54
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 126
   yacc.py:2563:
   yacc.py:2565:    (47) UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    DIVIDE          reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    MOD             reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    PLUS            reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    MINUS           reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    SEMICOLON       reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    COMMA           reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    RBRACKET        reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    RBRACE          reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    RPAREN          reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    LESS            reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    GREATER         reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    EQUAL           reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    LOGICALAND      reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2687:    LOGICALOR       reduce using rule 47 (UnaryExp -> IDENTIFIER LPAREN FuncRParams RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 127
   yacc.py:2563:
   yacc.py:2565:    (85) FuncRParams -> Exp COMMA . FuncRParams
   yacc.py:2565:    (84) FuncRParams -> . Exp
   yacc.py:2565:    (85) FuncRParams -> . Exp COMMA FuncRParams
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Exp                            shift and go to state 100
   yacc.py:2714:    FuncRParams                    shift and go to state 148
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 128
   yacc.py:2563:
   yacc.py:2565:    (56) LVal -> IDENTIFIER LBRACKET Exp RBRACKET .
   yacc.py:2566:
   yacc.py:2687:    TIMES           reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    DIVIDE          reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    MOD             reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    PLUS            reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    MINUS           reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    SEMICOLON       reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    COMMA           reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    RBRACKET        reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    RBRACE          reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    RPAREN          reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    LESS            reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    GREATER         reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    EQUAL           reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    LOGICALAND      reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    LOGICALOR       reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2687:    ASSIGN          reduce using rule 56 (LVal -> IDENTIFIER LBRACKET Exp RBRACKET .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 129
   yacc.py:2563:
   yacc.py:2565:    (23) VarDef -> IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN InitVal .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 23 (VarDef -> IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN InitVal .)
   yacc.py:2687:    COMMA           reduce using rule 23 (VarDef -> IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN InitVal .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 130
   yacc.py:2563:
   yacc.py:2565:    (58) Stmt -> LVal ASSIGN Exp . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 149
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 131
   yacc.py:2563:
   yacc.py:2565:    (69) Stmt -> LVal ASSIGN GETINT . LPAREN RPAREN SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 150
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 132
   yacc.py:2563:
   yacc.py:2565:    (62) Stmt -> IF LPAREN Cond . RPAREN Stmt ELSE Stmt
   yacc.py:2565:    (63) Stmt -> IF LPAREN Cond . RPAREN Stmt
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 151
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 133
   yacc.py:2563:
   yacc.py:2565:    (92) Cond -> LOrExp .
   yacc.py:2565:    (28) LOrExp -> LOrExp . LOGICALOR LAndExp
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 92 (Cond -> LOrExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 92 (Cond -> LOrExp .)
   yacc.py:2687:    LOGICALOR       shift and go to state 152
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 134
   yacc.py:2563:
   yacc.py:2565:    (27) LOrExp -> LAndExp .
   yacc.py:2565:    (30) LAndExp -> LAndExp . LOGICALAND EqExp
   yacc.py:2566:
   yacc.py:2687:    LOGICALOR       reduce using rule 27 (LOrExp -> LAndExp .)
   yacc.py:2687:    RPAREN          reduce using rule 27 (LOrExp -> LAndExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 27 (LOrExp -> LAndExp .)
   yacc.py:2687:    LOGICALAND      shift and go to state 153
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 135
   yacc.py:2563:
   yacc.py:2565:    (29) LAndExp -> EqExp .
   yacc.py:2565:    (39) EqExp -> EqExp . EQUAL RelExp
   yacc.py:2565:    (40) EqExp -> EqExp . NOTEQUAL RelExp
   yacc.py:2566:
   yacc.py:2687:    LOGICALAND      reduce using rule 29 (LAndExp -> EqExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 29 (LAndExp -> EqExp .)
   yacc.py:2687:    RPAREN          reduce using rule 29 (LAndExp -> EqExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 29 (LAndExp -> EqExp .)
   yacc.py:2687:    EQUAL           shift and go to state 154
   yacc.py:2687:    NOTEQUAL        shift and go to state 155
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 136
   yacc.py:2563:
   yacc.py:2565:    (38) EqExp -> RelExp .
   yacc.py:2565:    (42) RelExp -> RelExp . LESS AddExp
   yacc.py:2565:    (43) RelExp -> RelExp . LESSEQUAL AddExp
   yacc.py:2565:    (44) RelExp -> RelExp . GREATER AddExp
   yacc.py:2565:    (45) RelExp -> RelExp . GREATEREQUAL AddExp
   yacc.py:2566:
   yacc.py:2687:    EQUAL           reduce using rule 38 (EqExp -> RelExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 38 (EqExp -> RelExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 38 (EqExp -> RelExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 38 (EqExp -> RelExp .)
   yacc.py:2687:    RPAREN          reduce using rule 38 (EqExp -> RelExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 38 (EqExp -> RelExp .)
   yacc.py:2687:    LESS            shift and go to state 156
   yacc.py:2687:    LESSEQUAL       shift and go to state 157
   yacc.py:2687:    GREATER         shift and go to state 158
   yacc.py:2687:    GREATEREQUAL    shift and go to state 159
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 137
   yacc.py:2563:
   yacc.py:2565:    (41) RelExp -> AddExp .
   yacc.py:2565:    (32) AddExp -> AddExp . PLUS MulExp
   yacc.py:2565:    (33) AddExp -> AddExp . MINUS MulExp
   yacc.py:2566:
   yacc.py:2687:    LESS            reduce using rule 41 (RelExp -> AddExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 41 (RelExp -> AddExp .)
   yacc.py:2687:    GREATER         reduce using rule 41 (RelExp -> AddExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 41 (RelExp -> AddExp .)
   yacc.py:2687:    EQUAL           reduce using rule 41 (RelExp -> AddExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 41 (RelExp -> AddExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 41 (RelExp -> AddExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 41 (RelExp -> AddExp .)
   yacc.py:2687:    RPAREN          reduce using rule 41 (RelExp -> AddExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 41 (RelExp -> AddExp .)
   yacc.py:2687:    PLUS            shift and go to state 69
   yacc.py:2687:    MINUS           shift and go to state 70
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 138
   yacc.py:2563:
   yacc.py:2565:    (64) Stmt -> FOR LPAREN ForStmt . SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 160
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 139
   yacc.py:2563:
   yacc.py:2565:    (75) ForStmt -> LVal . ASSIGN Exp
   yacc.py:2566:
   yacc.py:2687:    ASSIGN          shift and go to state 161
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 140
   yacc.py:2563:
   yacc.py:2565:    (55) LVal -> IDENTIFIER .
   yacc.py:2565:    (56) LVal -> IDENTIFIER . LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    ASSIGN          reduce using rule 55 (LVal -> IDENTIFIER .)
   yacc.py:2687:    LBRACKET        shift and go to state 67
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 141
   yacc.py:2563:
   yacc.py:2565:    (67) Stmt -> RETURN Exp SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2687:    ELSE            reduce using rule 67 (Stmt -> RETURN Exp SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 142
   yacc.py:2563:
   yacc.py:2565:    (70) Stmt -> PRINTF LPAREN FormatString . PRINTFParams RPAREN SEMICOLON
   yacc.py:2565:    (72) PRINTFParams -> . Exp
   yacc.py:2565:    (73) PRINTFParams -> . Exp COMMA PRINTFParams
   yacc.py:2565:    (74) PRINTFParams -> .
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 74 (PRINTFParams -> .)
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    PRINTFParams                   shift and go to state 162
   yacc.py:2714:    Exp                            shift and go to state 163
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 143
   yacc.py:2563:
   yacc.py:2565:    (93) FormatString -> FORMATSTRING .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 93 (FormatString -> FORMATSTRING .)
   yacc.py:2687:    LPAREN          reduce using rule 93 (FormatString -> FORMATSTRING .)
   yacc.py:2687:    INTCONST        reduce using rule 93 (FormatString -> FORMATSTRING .)
   yacc.py:2687:    PLUS            reduce using rule 93 (FormatString -> FORMATSTRING .)
   yacc.py:2687:    MINUS           reduce using rule 93 (FormatString -> FORMATSTRING .)
   yacc.py:2687:    NOT             reduce using rule 93 (FormatString -> FORMATSTRING .)
   yacc.py:2687:    RPAREN          reduce using rule 93 (FormatString -> FORMATSTRING .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 144
   yacc.py:2563:
   yacc.py:2565:    (71) Stmt -> PARALLEL LPAREN IDENTIFIER . IN LBRACKET list RBRACKET RPAREN Block
   yacc.py:2566:
   yacc.py:2687:    IN              shift and go to state 164
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 145
   yacc.py:2563:
   yacc.py:2565:    (15) ConstInitValList -> ConstInitVal COMMA ConstInitValList .
   yacc.py:2566:
   yacc.py:2687:    RBRACE          reduce using rule 15 (ConstInitValList -> ConstInitVal COMMA ConstInitValList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 146
   yacc.py:2563:
   yacc.py:2565:    (11) ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET LBRACKET ConstExp . RBRACKET ASSIGN ConstInitVal
   yacc.py:2566:
   yacc.py:2687:    RBRACKET        shift and go to state 165
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 147
   yacc.py:2563:
   yacc.py:2565:    (10) ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal .
   yacc.py:2566:
   yacc.py:2687:    COMMA           reduce using rule 10 (ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal .)
   yacc.py:2687:    SEMICOLON       reduce using rule 10 (ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 148
   yacc.py:2563:
   yacc.py:2565:    (85) FuncRParams -> Exp COMMA FuncRParams .
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 85 (FuncRParams -> Exp COMMA FuncRParams .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 149
   yacc.py:2563:
   yacc.py:2565:    (58) Stmt -> LVal ASSIGN Exp SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2687:    ELSE            reduce using rule 58 (Stmt -> LVal ASSIGN Exp SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 150
   yacc.py:2563:
   yacc.py:2565:    (69) Stmt -> LVal ASSIGN GETINT LPAREN . RPAREN SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 166
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 151
   yacc.py:2563:
   yacc.py:2565:    (62) Stmt -> IF LPAREN Cond RPAREN . Stmt ELSE Stmt
   yacc.py:2565:    (63) Stmt -> IF LPAREN Cond RPAREN . Stmt
   yacc.py:2565:    (58) Stmt -> . LVal ASSIGN Exp SEMICOLON
   yacc.py:2565:    (59) Stmt -> . Exp SEMICOLON
   yacc.py:2565:    (60) Stmt -> . SEMICOLON
   yacc.py:2565:    (61) Stmt -> . Block
   yacc.py:2565:    (62) Stmt -> . IF LPAREN Cond RPAREN Stmt ELSE Stmt
   yacc.py:2565:    (63) Stmt -> . IF LPAREN Cond RPAREN Stmt
   yacc.py:2565:    (64) Stmt -> . FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt
   yacc.py:2565:    (65) Stmt -> . BREAK SEMICOLON
   yacc.py:2565:    (66) Stmt -> . CONTINUE SEMICOLON
   yacc.py:2565:    (67) Stmt -> . RETURN Exp SEMICOLON
   yacc.py:2565:    (68) Stmt -> . RETURN SEMICOLON
   yacc.py:2565:    (69) Stmt -> . LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON
   yacc.py:2565:    (70) Stmt -> . PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON
   yacc.py:2565:    (71) Stmt -> . PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (86) Block -> . LBRACE RBRACE
   yacc.py:2565:    (87) Block -> . LBRACE BlockItems RBRACE
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 85
   yacc.py:2687:    IF              shift and go to state 87
   yacc.py:2687:    FOR             shift and go to state 88
   yacc.py:2687:    BREAK           shift and go to state 89
   yacc.py:2687:    CONTINUE        shift and go to state 90
   yacc.py:2687:    RETURN          shift and go to state 91
   yacc.py:2687:    PRINTF          shift and go to state 92
   yacc.py:2687:    PARALLEL        shift and go to state 93
   yacc.py:2687:    IDENTIFIER      shift and go to state 94
   yacc.py:2687:    LBRACE          shift and go to state 57
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Stmt                           shift and go to state 167
   yacc.py:2714:    LVal                           shift and go to state 83
   yacc.py:2714:    Exp                            shift and go to state 84
   yacc.py:2714:    Block                          shift and go to state 86
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2561:
   yacc.py:2562:state 152
   yacc.py:2563:
   yacc.py:2565:    (28) LOrExp -> LOrExp LOGICALOR . LAndExp
   yacc.py:2565:    (29) LAndExp -> . EqExp
   yacc.py:2565:    (30) LAndExp -> . LAndExp LOGICALAND EqExp
   yacc.py:2565:    (38) EqExp -> . RelExp
   yacc.py:2565:    (39) EqExp -> . EqExp EQUAL RelExp
   yacc.py:2565:    (40) EqExp -> . EqExp NOTEQUAL RelExp
   yacc.py:2565:    (41) RelExp -> . AddExp
   yacc.py:2565:    (42) RelExp -> . RelExp LESS AddExp
   yacc.py:2565:    (43) RelExp -> . RelExp LESSEQUAL AddExp
   yacc.py:2565:    (44) RelExp -> . RelExp GREATER AddExp
   yacc.py:2565:    (45) RelExp -> . RelExp GREATEREQUAL AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    LAndExp                        shift and go to state 168
   yacc.py:2714:    EqExp                          shift and go to state 135
   yacc.py:2714:    RelExp                         shift and go to state 136
   yacc.py:2714:    AddExp                         shift and go to state 137
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 153
   yacc.py:2563:
   yacc.py:2565:    (30) LAndExp -> LAndExp LOGICALAND . EqExp
   yacc.py:2565:    (38) EqExp -> . RelExp
   yacc.py:2565:    (39) EqExp -> . EqExp EQUAL RelExp
   yacc.py:2565:    (40) EqExp -> . EqExp NOTEQUAL RelExp
   yacc.py:2565:    (41) RelExp -> . AddExp
   yacc.py:2565:    (42) RelExp -> . RelExp LESS AddExp
   yacc.py:2565:    (43) RelExp -> . RelExp LESSEQUAL AddExp
   yacc.py:2565:    (44) RelExp -> . RelExp GREATER AddExp
   yacc.py:2565:    (45) RelExp -> . RelExp GREATEREQUAL AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    EqExp                          shift and go to state 169
   yacc.py:2714:    RelExp                         shift and go to state 136
   yacc.py:2714:    AddExp                         shift and go to state 137
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 154
   yacc.py:2563:
   yacc.py:2565:    (39) EqExp -> EqExp EQUAL . RelExp
   yacc.py:2565:    (41) RelExp -> . AddExp
   yacc.py:2565:    (42) RelExp -> . RelExp LESS AddExp
   yacc.py:2565:    (43) RelExp -> . RelExp LESSEQUAL AddExp
   yacc.py:2565:    (44) RelExp -> . RelExp GREATER AddExp
   yacc.py:2565:    (45) RelExp -> . RelExp GREATEREQUAL AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    RelExp                         shift and go to state 170
   yacc.py:2714:    AddExp                         shift and go to state 137
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 155
   yacc.py:2563:
   yacc.py:2565:    (40) EqExp -> EqExp NOTEQUAL . RelExp
   yacc.py:2565:    (41) RelExp -> . AddExp
   yacc.py:2565:    (42) RelExp -> . RelExp LESS AddExp
   yacc.py:2565:    (43) RelExp -> . RelExp LESSEQUAL AddExp
   yacc.py:2565:    (44) RelExp -> . RelExp GREATER AddExp
   yacc.py:2565:    (45) RelExp -> . RelExp GREATEREQUAL AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    RelExp                         shift and go to state 171
   yacc.py:2714:    AddExp                         shift and go to state 137
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 156
   yacc.py:2563:
   yacc.py:2565:    (42) RelExp -> RelExp LESS . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    AddExp                         shift and go to state 172
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 157
   yacc.py:2563:
   yacc.py:2565:    (43) RelExp -> RelExp LESSEQUAL . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    AddExp                         shift and go to state 173
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 158
   yacc.py:2563:
   yacc.py:2565:    (44) RelExp -> RelExp GREATER . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    AddExp                         shift and go to state 174
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 159
   yacc.py:2563:
   yacc.py:2565:    (45) RelExp -> RelExp GREATEREQUAL . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    AddExp                         shift and go to state 175
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 160
   yacc.py:2563:
   yacc.py:2565:    (64) Stmt -> FOR LPAREN ForStmt SEMICOLON . Cond SEMICOLON ForStmt RPAREN Stmt
   yacc.py:2565:    (92) Cond -> . LOrExp
   yacc.py:2565:    (27) LOrExp -> . LAndExp
   yacc.py:2565:    (28) LOrExp -> . LOrExp LOGICALOR LAndExp
   yacc.py:2565:    (29) LAndExp -> . EqExp
   yacc.py:2565:    (30) LAndExp -> . LAndExp LOGICALAND EqExp
   yacc.py:2565:    (38) EqExp -> . RelExp
   yacc.py:2565:    (39) EqExp -> . EqExp EQUAL RelExp
   yacc.py:2565:    (40) EqExp -> . EqExp NOTEQUAL RelExp
   yacc.py:2565:    (41) RelExp -> . AddExp
   yacc.py:2565:    (42) RelExp -> . RelExp LESS AddExp
   yacc.py:2565:    (43) RelExp -> . RelExp LESSEQUAL AddExp
   yacc.py:2565:    (44) RelExp -> . RelExp GREATER AddExp
   yacc.py:2565:    (45) RelExp -> . RelExp GREATEREQUAL AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Cond                           shift and go to state 176
   yacc.py:2714:    LOrExp                         shift and go to state 133
   yacc.py:2714:    LAndExp                        shift and go to state 134
   yacc.py:2714:    EqExp                          shift and go to state 135
   yacc.py:2714:    RelExp                         shift and go to state 136
   yacc.py:2714:    AddExp                         shift and go to state 137
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 161
   yacc.py:2563:
   yacc.py:2565:    (75) ForStmt -> LVal ASSIGN . Exp
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2714:    Exp                            shift and go to state 177
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2561:
   yacc.py:2562:state 162
   yacc.py:2563:
   yacc.py:2565:    (70) Stmt -> PRINTF LPAREN FormatString PRINTFParams . RPAREN SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 178
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 163
   yacc.py:2563:
   yacc.py:2565:    (72) PRINTFParams -> Exp .
   yacc.py:2565:    (73) PRINTFParams -> Exp . COMMA PRINTFParams
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 72 (PRINTFParams -> Exp .)
   yacc.py:2687:    COMMA           shift and go to state 179
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 164
   yacc.py:2563:
   yacc.py:2565:    (71) Stmt -> PARALLEL LPAREN IDENTIFIER IN . LBRACKET list RBRACKET RPAREN Block
   yacc.py:2566:
   yacc.py:2687:    LBRACKET        shift and go to state 180
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 165
   yacc.py:2563:
   yacc.py:2565:    (11) ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET LBRACKET ConstExp RBRACKET . ASSIGN ConstInitVal
   yacc.py:2566:
   yacc.py:2687:    ASSIGN          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 166
   yacc.py:2563:
   yacc.py:2565:    (69) Stmt -> LVal ASSIGN GETINT LPAREN RPAREN . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 182
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 167
   yacc.py:2563:
   yacc.py:2565:    (62) Stmt -> IF LPAREN Cond RPAREN Stmt . ELSE Stmt
   yacc.py:2565:    (63) Stmt -> IF LPAREN Cond RPAREN Stmt .
   yacc.py:2566:
   yacc.py:2609:  ! shift/reduce conflict for ELSE resolved as shift
   yacc.py:2687:    ELSE            shift and go to state 183
   yacc.py:2687:    SEMICOLON       reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    IF              reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    FOR             reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    BREAK           reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    CONTINUE        reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    RETURN          reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    PRINTF          reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    PARALLEL        reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    CONST           reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    LBRACE          reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    INT             reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    LPAREN          reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    INTCONST        reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    PLUS            reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    MINUS           reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    NOT             reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2687:    RBRACE          reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .)
   yacc.py:2689:
   yacc.py:2696:  ! ELSE            [ reduce using rule 63 (Stmt -> IF LPAREN Cond RPAREN Stmt .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 168
   yacc.py:2563:
   yacc.py:2565:    (28) LOrExp -> LOrExp LOGICALOR LAndExp .
   yacc.py:2565:    (30) LAndExp -> LAndExp . LOGICALAND EqExp
   yacc.py:2566:
   yacc.py:2687:    LOGICALOR       reduce using rule 28 (LOrExp -> LOrExp LOGICALOR LAndExp .)
   yacc.py:2687:    RPAREN          reduce using rule 28 (LOrExp -> LOrExp LOGICALOR LAndExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 28 (LOrExp -> LOrExp LOGICALOR LAndExp .)
   yacc.py:2687:    LOGICALAND      shift and go to state 153
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 169
   yacc.py:2563:
   yacc.py:2565:    (30) LAndExp -> LAndExp LOGICALAND EqExp .
   yacc.py:2565:    (39) EqExp -> EqExp . EQUAL RelExp
   yacc.py:2565:    (40) EqExp -> EqExp . NOTEQUAL RelExp
   yacc.py:2566:
   yacc.py:2687:    LOGICALAND      reduce using rule 30 (LAndExp -> LAndExp LOGICALAND EqExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 30 (LAndExp -> LAndExp LOGICALAND EqExp .)
   yacc.py:2687:    RPAREN          reduce using rule 30 (LAndExp -> LAndExp LOGICALAND EqExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 30 (LAndExp -> LAndExp LOGICALAND EqExp .)
   yacc.py:2687:    EQUAL           shift and go to state 154
   yacc.py:2687:    NOTEQUAL        shift and go to state 155
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 170
   yacc.py:2563:
   yacc.py:2565:    (39) EqExp -> EqExp EQUAL RelExp .
   yacc.py:2565:    (42) RelExp -> RelExp . LESS AddExp
   yacc.py:2565:    (43) RelExp -> RelExp . LESSEQUAL AddExp
   yacc.py:2565:    (44) RelExp -> RelExp . GREATER AddExp
   yacc.py:2565:    (45) RelExp -> RelExp . GREATEREQUAL AddExp
   yacc.py:2566:
   yacc.py:2687:    EQUAL           reduce using rule 39 (EqExp -> EqExp EQUAL RelExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 39 (EqExp -> EqExp EQUAL RelExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 39 (EqExp -> EqExp EQUAL RelExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 39 (EqExp -> EqExp EQUAL RelExp .)
   yacc.py:2687:    RPAREN          reduce using rule 39 (EqExp -> EqExp EQUAL RelExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 39 (EqExp -> EqExp EQUAL RelExp .)
   yacc.py:2687:    LESS            shift and go to state 156
   yacc.py:2687:    LESSEQUAL       shift and go to state 157
   yacc.py:2687:    GREATER         shift and go to state 158
   yacc.py:2687:    GREATEREQUAL    shift and go to state 159
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 171
   yacc.py:2563:
   yacc.py:2565:    (40) EqExp -> EqExp NOTEQUAL RelExp .
   yacc.py:2565:    (42) RelExp -> RelExp . LESS AddExp
   yacc.py:2565:    (43) RelExp -> RelExp . LESSEQUAL AddExp
   yacc.py:2565:    (44) RelExp -> RelExp . GREATER AddExp
   yacc.py:2565:    (45) RelExp -> RelExp . GREATEREQUAL AddExp
   yacc.py:2566:
   yacc.py:2687:    EQUAL           reduce using rule 40 (EqExp -> EqExp NOTEQUAL RelExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 40 (EqExp -> EqExp NOTEQUAL RelExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 40 (EqExp -> EqExp NOTEQUAL RelExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 40 (EqExp -> EqExp NOTEQUAL RelExp .)
   yacc.py:2687:    RPAREN          reduce using rule 40 (EqExp -> EqExp NOTEQUAL RelExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 40 (EqExp -> EqExp NOTEQUAL RelExp .)
   yacc.py:2687:    LESS            shift and go to state 156
   yacc.py:2687:    LESSEQUAL       shift and go to state 157
   yacc.py:2687:    GREATER         shift and go to state 158
   yacc.py:2687:    GREATEREQUAL    shift and go to state 159
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 172
   yacc.py:2563:
   yacc.py:2565:    (42) RelExp -> RelExp LESS AddExp .
   yacc.py:2565:    (32) AddExp -> AddExp . PLUS MulExp
   yacc.py:2565:    (33) AddExp -> AddExp . MINUS MulExp
   yacc.py:2566:
   yacc.py:2687:    LESS            reduce using rule 42 (RelExp -> RelExp LESS AddExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 42 (RelExp -> RelExp LESS AddExp .)
   yacc.py:2687:    GREATER         reduce using rule 42 (RelExp -> RelExp LESS AddExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 42 (RelExp -> RelExp LESS AddExp .)
   yacc.py:2687:    EQUAL           reduce using rule 42 (RelExp -> RelExp LESS AddExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 42 (RelExp -> RelExp LESS AddExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 42 (RelExp -> RelExp LESS AddExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 42 (RelExp -> RelExp LESS AddExp .)
   yacc.py:2687:    RPAREN          reduce using rule 42 (RelExp -> RelExp LESS AddExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 42 (RelExp -> RelExp LESS AddExp .)
   yacc.py:2687:    PLUS            shift and go to state 69
   yacc.py:2687:    MINUS           shift and go to state 70
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 173
   yacc.py:2563:
   yacc.py:2565:    (43) RelExp -> RelExp LESSEQUAL AddExp .
   yacc.py:2565:    (32) AddExp -> AddExp . PLUS MulExp
   yacc.py:2565:    (33) AddExp -> AddExp . MINUS MulExp
   yacc.py:2566:
   yacc.py:2687:    LESS            reduce using rule 43 (RelExp -> RelExp LESSEQUAL AddExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 43 (RelExp -> RelExp LESSEQUAL AddExp .)
   yacc.py:2687:    GREATER         reduce using rule 43 (RelExp -> RelExp LESSEQUAL AddExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 43 (RelExp -> RelExp LESSEQUAL AddExp .)
   yacc.py:2687:    EQUAL           reduce using rule 43 (RelExp -> RelExp LESSEQUAL AddExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 43 (RelExp -> RelExp LESSEQUAL AddExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 43 (RelExp -> RelExp LESSEQUAL AddExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 43 (RelExp -> RelExp LESSEQUAL AddExp .)
   yacc.py:2687:    RPAREN          reduce using rule 43 (RelExp -> RelExp LESSEQUAL AddExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 43 (RelExp -> RelExp LESSEQUAL AddExp .)
   yacc.py:2687:    PLUS            shift and go to state 69
   yacc.py:2687:    MINUS           shift and go to state 70
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 174
   yacc.py:2563:
   yacc.py:2565:    (44) RelExp -> RelExp GREATER AddExp .
   yacc.py:2565:    (32) AddExp -> AddExp . PLUS MulExp
   yacc.py:2565:    (33) AddExp -> AddExp . MINUS MulExp
   yacc.py:2566:
   yacc.py:2687:    LESS            reduce using rule 44 (RelExp -> RelExp GREATER AddExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 44 (RelExp -> RelExp GREATER AddExp .)
   yacc.py:2687:    GREATER         reduce using rule 44 (RelExp -> RelExp GREATER AddExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 44 (RelExp -> RelExp GREATER AddExp .)
   yacc.py:2687:    EQUAL           reduce using rule 44 (RelExp -> RelExp GREATER AddExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 44 (RelExp -> RelExp GREATER AddExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 44 (RelExp -> RelExp GREATER AddExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 44 (RelExp -> RelExp GREATER AddExp .)
   yacc.py:2687:    RPAREN          reduce using rule 44 (RelExp -> RelExp GREATER AddExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 44 (RelExp -> RelExp GREATER AddExp .)
   yacc.py:2687:    PLUS            shift and go to state 69
   yacc.py:2687:    MINUS           shift and go to state 70
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 175
   yacc.py:2563:
   yacc.py:2565:    (45) RelExp -> RelExp GREATEREQUAL AddExp .
   yacc.py:2565:    (32) AddExp -> AddExp . PLUS MulExp
   yacc.py:2565:    (33) AddExp -> AddExp . MINUS MulExp
   yacc.py:2566:
   yacc.py:2687:    LESS            reduce using rule 45 (RelExp -> RelExp GREATEREQUAL AddExp .)
   yacc.py:2687:    LESSEQUAL       reduce using rule 45 (RelExp -> RelExp GREATEREQUAL AddExp .)
   yacc.py:2687:    GREATER         reduce using rule 45 (RelExp -> RelExp GREATEREQUAL AddExp .)
   yacc.py:2687:    GREATEREQUAL    reduce using rule 45 (RelExp -> RelExp GREATEREQUAL AddExp .)
   yacc.py:2687:    EQUAL           reduce using rule 45 (RelExp -> RelExp GREATEREQUAL AddExp .)
   yacc.py:2687:    NOTEQUAL        reduce using rule 45 (RelExp -> RelExp GREATEREQUAL AddExp .)
   yacc.py:2687:    LOGICALAND      reduce using rule 45 (RelExp -> RelExp GREATEREQUAL AddExp .)
   yacc.py:2687:    LOGICALOR       reduce using rule 45 (RelExp -> RelExp GREATEREQUAL AddExp .)
   yacc.py:2687:    RPAREN          reduce using rule 45 (RelExp -> RelExp GREATEREQUAL AddExp .)
   yacc.py:2687:    SEMICOLON       reduce using rule 45 (RelExp -> RelExp GREATEREQUAL AddExp .)
   yacc.py:2687:    PLUS            shift and go to state 69
   yacc.py:2687:    MINUS           shift and go to state 70
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 176
   yacc.py:2563:
   yacc.py:2565:    (64) Stmt -> FOR LPAREN ForStmt SEMICOLON Cond . SEMICOLON ForStmt RPAREN Stmt
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 184
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 177
   yacc.py:2563:
   yacc.py:2565:    (75) ForStmt -> LVal ASSIGN Exp .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 75 (ForStmt -> LVal ASSIGN Exp .)
   yacc.py:2687:    RPAREN          reduce using rule 75 (ForStmt -> LVal ASSIGN Exp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 178
   yacc.py:2563:
   yacc.py:2565:    (70) Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 185
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 179
   yacc.py:2563:
   yacc.py:2565:    (73) PRINTFParams -> Exp COMMA . PRINTFParams
   yacc.py:2565:    (72) PRINTFParams -> . Exp
   yacc.py:2565:    (73) PRINTFParams -> . Exp COMMA PRINTFParams
   yacc.py:2565:    (74) PRINTFParams -> .
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 74 (PRINTFParams -> .)
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Exp                            shift and go to state 163
   yacc.py:2714:    PRINTFParams                   shift and go to state 186
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 180
   yacc.py:2563:
   yacc.py:2565:    (71) Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET . list RBRACKET RPAREN Block
   yacc.py:2565:    (77) list -> . Exp
   yacc.py:2565:    (78) list -> . list COMMA Exp
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    list                           shift and go to state 187
   yacc.py:2714:    Exp                            shift and go to state 188
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 181
   yacc.py:2563:
   yacc.py:2565:    (11) ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET LBRACKET ConstExp RBRACKET ASSIGN . ConstInitVal
   yacc.py:2565:    (12) ConstInitVal -> . ConstExp
   yacc.py:2565:    (13) ConstInitVal -> . LBRACE ConstInitValList RBRACE
   yacc.py:2565:    (16) ConstExp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 63
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    ConstExp                       shift and go to state 62
   yacc.py:2714:    ConstInitVal                   shift and go to state 189
   yacc.py:2714:    AddExp                         shift and go to state 54
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 182
   yacc.py:2563:
   yacc.py:2565:    (69) Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2687:    ELSE            reduce using rule 69 (Stmt -> LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 183
   yacc.py:2563:
   yacc.py:2565:    (62) Stmt -> IF LPAREN Cond RPAREN Stmt ELSE . Stmt
   yacc.py:2565:    (58) Stmt -> . LVal ASSIGN Exp SEMICOLON
   yacc.py:2565:    (59) Stmt -> . Exp SEMICOLON
   yacc.py:2565:    (60) Stmt -> . SEMICOLON
   yacc.py:2565:    (61) Stmt -> . Block
   yacc.py:2565:    (62) Stmt -> . IF LPAREN Cond RPAREN Stmt ELSE Stmt
   yacc.py:2565:    (63) Stmt -> . IF LPAREN Cond RPAREN Stmt
   yacc.py:2565:    (64) Stmt -> . FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt
   yacc.py:2565:    (65) Stmt -> . BREAK SEMICOLON
   yacc.py:2565:    (66) Stmt -> . CONTINUE SEMICOLON
   yacc.py:2565:    (67) Stmt -> . RETURN Exp SEMICOLON
   yacc.py:2565:    (68) Stmt -> . RETURN SEMICOLON
   yacc.py:2565:    (69) Stmt -> . LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON
   yacc.py:2565:    (70) Stmt -> . PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON
   yacc.py:2565:    (71) Stmt -> . PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (86) Block -> . LBRACE RBRACE
   yacc.py:2565:    (87) Block -> . LBRACE BlockItems RBRACE
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 85
   yacc.py:2687:    IF              shift and go to state 87
   yacc.py:2687:    FOR             shift and go to state 88
   yacc.py:2687:    BREAK           shift and go to state 89
   yacc.py:2687:    CONTINUE        shift and go to state 90
   yacc.py:2687:    RETURN          shift and go to state 91
   yacc.py:2687:    PRINTF          shift and go to state 92
   yacc.py:2687:    PARALLEL        shift and go to state 93
   yacc.py:2687:    IDENTIFIER      shift and go to state 94
   yacc.py:2687:    LBRACE          shift and go to state 57
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Stmt                           shift and go to state 190
   yacc.py:2714:    LVal                           shift and go to state 83
   yacc.py:2714:    Exp                            shift and go to state 84
   yacc.py:2714:    Block                          shift and go to state 86
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2561:
   yacc.py:2562:state 184
   yacc.py:2563:
   yacc.py:2565:    (64) Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON . ForStmt RPAREN Stmt
   yacc.py:2565:    (75) ForStmt -> . LVal ASSIGN Exp
   yacc.py:2565:    (76) ForStmt -> .
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 76 (ForStmt -> .)
   yacc.py:2687:    IDENTIFIER      shift and go to state 140
   yacc.py:2689:
   yacc.py:2714:    ForStmt                        shift and go to state 191
   yacc.py:2714:    LVal                           shift and go to state 139
   yacc.py:2561:
   yacc.py:2562:state 185
   yacc.py:2563:
   yacc.py:2565:    (70) Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    IF              reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    FOR             reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    BREAK           reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    CONTINUE        reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    RETURN          reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    PRINTF          reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    PARALLEL        reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    CONST           reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    LBRACE          reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    INT             reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    LPAREN          reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    INTCONST        reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    PLUS            reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    MINUS           reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    NOT             reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    RBRACE          reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2687:    ELSE            reduce using rule 70 (Stmt -> PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 186
   yacc.py:2563:
   yacc.py:2565:    (73) PRINTFParams -> Exp COMMA PRINTFParams .
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 73 (PRINTFParams -> Exp COMMA PRINTFParams .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 187
   yacc.py:2563:
   yacc.py:2565:    (71) Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list . RBRACKET RPAREN Block
   yacc.py:2565:    (78) list -> list . COMMA Exp
   yacc.py:2566:
   yacc.py:2687:    RBRACKET        shift and go to state 192
   yacc.py:2687:    COMMA           shift and go to state 193
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 188
   yacc.py:2563:
   yacc.py:2565:    (77) list -> Exp .
   yacc.py:2566:
   yacc.py:2687:    RBRACKET        reduce using rule 77 (list -> Exp .)
   yacc.py:2687:    COMMA           reduce using rule 77 (list -> Exp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 189
   yacc.py:2563:
   yacc.py:2565:    (11) ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal .
   yacc.py:2566:
   yacc.py:2687:    COMMA           reduce using rule 11 (ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal .)
   yacc.py:2687:    SEMICOLON       reduce using rule 11 (ConstDef -> IDENTIFIER LBRACKET ConstExp RBRACKET LBRACKET ConstExp RBRACKET ASSIGN ConstInitVal .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 190
   yacc.py:2563:
   yacc.py:2565:    (62) Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    IF              reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    FOR             reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    BREAK           reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    CONTINUE        reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    RETURN          reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    PRINTF          reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    PARALLEL        reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    CONST           reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    LBRACE          reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    INT             reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    LPAREN          reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    INTCONST        reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    PLUS            reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    MINUS           reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    NOT             reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    RBRACE          reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2687:    ELSE            reduce using rule 62 (Stmt -> IF LPAREN Cond RPAREN Stmt ELSE Stmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 191
   yacc.py:2563:
   yacc.py:2565:    (64) Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt . RPAREN Stmt
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 194
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 192
   yacc.py:2563:
   yacc.py:2565:    (71) Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET . RPAREN Block
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 195
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 193
   yacc.py:2563:
   yacc.py:2565:    (78) list -> list COMMA . Exp
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 38
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Exp                            shift and go to state 196
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2714:    LVal                           shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 194
   yacc.py:2563:
   yacc.py:2565:    (64) Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN . Stmt
   yacc.py:2565:    (58) Stmt -> . LVal ASSIGN Exp SEMICOLON
   yacc.py:2565:    (59) Stmt -> . Exp SEMICOLON
   yacc.py:2565:    (60) Stmt -> . SEMICOLON
   yacc.py:2565:    (61) Stmt -> . Block
   yacc.py:2565:    (62) Stmt -> . IF LPAREN Cond RPAREN Stmt ELSE Stmt
   yacc.py:2565:    (63) Stmt -> . IF LPAREN Cond RPAREN Stmt
   yacc.py:2565:    (64) Stmt -> . FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt
   yacc.py:2565:    (65) Stmt -> . BREAK SEMICOLON
   yacc.py:2565:    (66) Stmt -> . CONTINUE SEMICOLON
   yacc.py:2565:    (67) Stmt -> . RETURN Exp SEMICOLON
   yacc.py:2565:    (68) Stmt -> . RETURN SEMICOLON
   yacc.py:2565:    (69) Stmt -> . LVal ASSIGN GETINT LPAREN RPAREN SEMICOLON
   yacc.py:2565:    (70) Stmt -> . PRINTF LPAREN FormatString PRINTFParams RPAREN SEMICOLON
   yacc.py:2565:    (71) Stmt -> . PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block
   yacc.py:2565:    (55) LVal -> . IDENTIFIER
   yacc.py:2565:    (56) LVal -> . IDENTIFIER LBRACKET Exp RBRACKET
   yacc.py:2565:    (26) Exp -> . AddExp
   yacc.py:2565:    (86) Block -> . LBRACE RBRACE
   yacc.py:2565:    (87) Block -> . LBRACE BlockItems RBRACE
   yacc.py:2565:    (31) AddExp -> . MulExp
   yacc.py:2565:    (32) AddExp -> . AddExp PLUS MulExp
   yacc.py:2565:    (33) AddExp -> . AddExp MINUS MulExp
   yacc.py:2565:    (34) MulExp -> . UnaryExp
   yacc.py:2565:    (35) MulExp -> . MulExp TIMES UnaryExp
   yacc.py:2565:    (36) MulExp -> . MulExp DIVIDE UnaryExp
   yacc.py:2565:    (37) MulExp -> . MulExp MOD UnaryExp
   yacc.py:2565:    (46) UnaryExp -> . PrimaryExp
   yacc.py:2565:    (47) UnaryExp -> . IDENTIFIER LPAREN FuncRParams RPAREN
   yacc.py:2565:    (48) UnaryExp -> . UnaryOp UnaryExp
   yacc.py:2565:    (52) PrimaryExp -> . LPAREN Exp RPAREN
   yacc.py:2565:    (53) PrimaryExp -> . LVal
   yacc.py:2565:    (54) PrimaryExp -> . INTCONST
   yacc.py:2565:    (49) UnaryOp -> . PLUS
   yacc.py:2565:    (50) UnaryOp -> . MINUS
   yacc.py:2565:    (51) UnaryOp -> . NOT
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 85
   yacc.py:2687:    IF              shift and go to state 87
   yacc.py:2687:    FOR             shift and go to state 88
   yacc.py:2687:    BREAK           shift and go to state 89
   yacc.py:2687:    CONTINUE        shift and go to state 90
   yacc.py:2687:    RETURN          shift and go to state 91
   yacc.py:2687:    PRINTF          shift and go to state 92
   yacc.py:2687:    PARALLEL        shift and go to state 93
   yacc.py:2687:    IDENTIFIER      shift and go to state 94
   yacc.py:2687:    LBRACE          shift and go to state 57
   yacc.py:2687:    LPAREN          shift and go to state 48
   yacc.py:2687:    INTCONST        shift and go to state 51
   yacc.py:2687:    PLUS            shift and go to state 44
   yacc.py:2687:    MINUS           shift and go to state 45
   yacc.py:2687:    NOT             shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    Stmt                           shift and go to state 197
   yacc.py:2714:    LVal                           shift and go to state 83
   yacc.py:2714:    Exp                            shift and go to state 84
   yacc.py:2714:    Block                          shift and go to state 86
   yacc.py:2714:    AddExp                         shift and go to state 42
   yacc.py:2714:    MulExp                         shift and go to state 43
   yacc.py:2714:    UnaryExp                       shift and go to state 46
   yacc.py:2714:    PrimaryExp                     shift and go to state 47
   yacc.py:2714:    UnaryOp                        shift and go to state 49
   yacc.py:2561:
   yacc.py:2562:state 195
   yacc.py:2563:
   yacc.py:2565:    (71) Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN . Block
   yacc.py:2565:    (86) Block -> . LBRACE RBRACE
   yacc.py:2565:    (87) Block -> . LBRACE BlockItems RBRACE
   yacc.py:2566:
   yacc.py:2687:    LBRACE          shift and go to state 57
   yacc.py:2689:
   yacc.py:2714:    Block                          shift and go to state 198
   yacc.py:2561:
   yacc.py:2562:state 196
   yacc.py:2563:
   yacc.py:2565:    (78) list -> list COMMA Exp .
   yacc.py:2566:
   yacc.py:2687:    RBRACKET        reduce using rule 78 (list -> list COMMA Exp .)
   yacc.py:2687:    COMMA           reduce using rule 78 (list -> list COMMA Exp .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 197
   yacc.py:2563:
   yacc.py:2565:    (64) Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    IF              reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    FOR             reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    BREAK           reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    CONTINUE        reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    RETURN          reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    PRINTF          reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    PARALLEL        reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    CONST           reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    LBRACE          reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    INT             reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    LPAREN          reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    INTCONST        reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    PLUS            reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    MINUS           reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    NOT             reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    RBRACE          reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2687:    ELSE            reduce using rule 64 (Stmt -> FOR LPAREN ForStmt SEMICOLON Cond SEMICOLON ForStmt RPAREN Stmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 198
   yacc.py:2563:
   yacc.py:2565:    (71) Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    IF              reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    FOR             reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    BREAK           reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    CONTINUE        reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    RETURN          reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    PRINTF          reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    PARALLEL        reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    CONST           reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    LBRACE          reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    INT             reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    LPAREN          reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    INTCONST        reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    PLUS            reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    MINUS           reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    NOT             reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    RBRACE          reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2687:    ELSE            reduce using rule 71 (Stmt -> PARALLEL LPAREN IDENTIFIER IN LBRACKET list RBRACKET RPAREN Block .)
   yacc.py:2689:
   yacc.py:3457:
   yacc.py:3458:Conflicts:
   yacc.py:3459:
   yacc.py:3462:shift/reduce conflict for ELSE in state 167 resolved as shift
